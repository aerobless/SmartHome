{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Hi there \ud83d\udc4b and welcome to my Smart Home documentation! I've set up this page to document my own setup and also to share some of my findings, configuration hints and automations. Although there's a vast community of fellow Smart Home enthusiasts it can still be hard to get started. I'm trying to make this a bit easier with this site. If you've got any input, have questions or otherwise get stuck feel free to leave a comment \ud83d\ude04 or hit me up on twitter @eletiy Quickstart \u00b6 Screenshots of the UI Hardware Automations Blog \u00b6 28.02.2021 Getting Started with Node-RED guide \u00b6 I had a bit of spare time so I wrote a Getting Started with Node-RED guide that teaches some of the basics on how to create automations in Node-RED. While creating this guide I realized again just how few nodes you really need to do most things in Node-RED. I've really got a ton of automations in Node-RED but I probably only use about 10-20% of all the nodes that come pre-installed. 21.01.2021 Migrated my Home Assistant installation to Proxmox \u00b6 Until recently I've had Home Assistant installed in supervised mode. That's the one where I have full control over the OS but still use the HA Supervisor and docker containers. It used to be easy to install and I didn't really have any issues. However since the HA Supervisor started to include various health checks it's been a bit annoying to keep it \"healthy\". So I've decided to go the virtualization route and install Proxmox. This allows me to run the official Home Assistant OS image as a VM and still run other VMs with different applications on the same machine. I've added a chapter about Proxmox under Software where you can find more information.","title":"Home"},{"location":"#welcome","text":"Hi there \ud83d\udc4b and welcome to my Smart Home documentation! I've set up this page to document my own setup and also to share some of my findings, configuration hints and automations. Although there's a vast community of fellow Smart Home enthusiasts it can still be hard to get started. I'm trying to make this a bit easier with this site. If you've got any input, have questions or otherwise get stuck feel free to leave a comment \ud83d\ude04 or hit me up on twitter @eletiy","title":"Welcome"},{"location":"#quickstart","text":"Screenshots of the UI Hardware Automations","title":"Quickstart"},{"location":"#blog","text":"","title":"Blog"},{"location":"#28022021-getting-started-with-node-red-guide","text":"I had a bit of spare time so I wrote a Getting Started with Node-RED guide that teaches some of the basics on how to create automations in Node-RED. While creating this guide I realized again just how few nodes you really need to do most things in Node-RED. I've really got a ton of automations in Node-RED but I probably only use about 10-20% of all the nodes that come pre-installed.","title":"28.02.2021 Getting Started with Node-RED guide"},{"location":"#21012021-migrated-my-home-assistant-installation-to-proxmox","text":"Until recently I've had Home Assistant installed in supervised mode. That's the one where I have full control over the OS but still use the HA Supervisor and docker containers. It used to be easy to install and I didn't really have any issues. However since the HA Supervisor started to include various health checks it's been a bit annoying to keep it \"healthy\". So I've decided to go the virtualization route and install Proxmox. This allows me to run the official Home Assistant OS image as a VM and still run other VMs with different applications on the same machine. I've added a chapter about Proxmox under Software where you can find more information.","title":"21.01.2021 Migrated my Home Assistant installation to Proxmox"},{"location":"automations/","text":"Most of my automations are built in Node-RED . Even though Home Assistant native automations have come a long way, there's still a few advantages that you only get with Node-RED. You can read more about it here . If you're new to Node-RED have a look at my new Getting Started with Node-RED guide. It covers everything from installation to setting up your first automation.","title":"Overview"},{"location":"automations/examples/","text":"Universal \u00b6 Vacuum the floor when I'm not home \u00b6 At 10am a check is executed whether the apartment is occupied or not. If it's not occupied the Roomba is triggered to start vacuuming the floor. If the apartment is occupied a notification is sent to me via Telegram to inform me that the cleaning cycle was not started. Node RED Flow [ { \"id\" : \"27f43369.1137ec\" , \"type\" : \"subflow\" , \"name\" : \"apartment occupied?\" , \"info\" : \"\" , \"category\" : \"\" , \"in\" : [ { \"x\" : 181.5 , \"y\" : 69 , \"wires\" : [ { \"id\" : \"cbbdb47d.a4ed48\" } ] } ], \"out\" : [ { \"x\" : 700 , \"y\" : 40 , \"wires\" : [ { \"id\" : \"1792a55d.ddc24b\" , \"port\" : 0 } ] }, { \"x\" : 700 , \"y\" : 90 , \"wires\" : [ { \"id\" : \"1792a55d.ddc24b\" , \"port\" : 1 } ] } ], \"outputLabels\" : [ \"clear\" , \"occupied\" ] }, { \"id\" : \"cbbdb47d.a4ed48\" , \"type\" : \"api-current-state\" , \"z\" : \"27f43369.1137ec\" , \"name\" : \"apartment occupancy\" , \"server\" : \"78fe396.483dac8\" , \"outputs\" : 1 , \"halt_if\" : \"\" , \"halt_if_type\" : \"str\" , \"halt_if_compare\" : \"is\" , \"override_topic\" : true , \"entity_id\" : \"binary_sensor.apartment_occupancy\" , \"state_type\" : \"habool\" , \"override_payload\" : true , \"override_data\" : true , \"x\" : 361.5 , \"y\" : 69 , \"wires\" : [ [ \"1792a55d.ddc24b\" ] ] }, { \"id\" : \"1792a55d.ddc24b\" , \"type\" : \"switch\" , \"z\" : \"27f43369.1137ec\" , \"name\" : \"is occupied?\" , \"property\" : \"payload\" , \"propertyType\" : \"msg\" , \"rules\" : [ { \"t\" : \"false\" }, { \"t\" : \"true\" } ], \"checkall\" : \"true\" , \"repair\" : false , \"outputs\" : 2 , \"x\" : 554.5 , \"y\" : 69 , \"wires\" : [ [], [] ] }, { \"id\" : \"74556465.5e1fac\" , \"type\" : \"api-call-service\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"Roomba ON\" , \"server\" : \"78fe396.483dac8\" , \"version\" : 1 , \"debugenabled\" : false , \"service_domain\" : \"vacuum\" , \"service\" : \"start\" , \"entityId\" : \"vacuum.ghost\" , \"data\" : \"\" , \"dataType\" : \"json\" , \"mergecontext\" : \"\" , \"output_location\" : \"payload\" , \"output_location_type\" : \"msg\" , \"mustacheAltTags\" : false , \"x\" : 570 , \"y\" : 40 , \"wires\" : [ [] ] }, { \"id\" : \"d5a40336.045ed\" , \"type\" : \"inject\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"10am weekdays\" , \"repeat\" : \"\" , \"crontab\" : \"00 10 * * 1,2,3,4,5\" , \"once\" : false , \"onceDelay\" : 0.1 , \"topic\" : \"\" , \"payload\" : \"true\" , \"payloadType\" : \"bool\" , \"x\" : 144.5 , \"y\" : 60 , \"wires\" : [ [ \"b816139a.b3f9e\" ] ] }, { \"id\" : \"b816139a.b3f9e\" , \"type\" : \"subflow:27f43369.1137ec\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"\" , \"x\" : 360 , \"y\" : 60 , \"wires\" : [ [ \"74556465.5e1fac\" ], [ \"b94a88b0.eff1c8\" ] ] }, { \"id\" : \"b94a88b0.eff1c8\" , \"type\" : \"api-call-service\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"Telegram Log\" , \"server\" : \"78fe396.483dac8\" , \"version\" : \"1\" , \"debugenabled\" : false , \"service_domain\" : \"telegram_bot\" , \"service\" : \"send_message\" , \"entityId\" : \"\" , \"data\" : \"{ \\\" message \\\" : \\\" Not launching Roomba because someone's home \\\" }\" , \"dataType\" : \"json\" , \"mergecontext\" : \"\" , \"output_location\" : \"payload\" , \"output_location_type\" : \"msg\" , \"mustacheAltTags\" : false , \"x\" : 570 , \"y\" : 80 , \"wires\" : [ [] ] }, { \"id\" : \"78fe396.483dac8\" , \"type\" : \"server\" , \"name\" : \"Home Assistant\" , \"legacy\" : false , \"addon\" : true , \"rejectUnauthorizedCerts\" : true , \"ha_boolean\" : \"y|yes|true|on|home|open\" , \"connectionDelay\" : true , \"cacheJson\" : true } ] Lights \u00b6 Kitchen Overhead Light \u00b6 If motion is detected at the sink, the kitchen overhead light is turned on. At the same time a timer is set for 3mins. If further motion is detected the timer is reset. If no more motion occurs and the timer runs out the light is turned off again. Shelly Light Switches \u00b6 To prevent the hue lights from being turned off fully I've added a Shelly controller behind each light switch. This detaches the switch from turn on/off the power and instead sends a MQTT messages to Home Assistant that the button was pressed. So in order for some of the light switches to actually turn on/off lights there needs to be a really simple automation connecting the action of pressing the switch with some lights that can be controlled. Another advantage of this system is that I've got light switches to spare for other functions. Since for example in the living room I'm happy with turning on/off all the lights at the same time. So of 4 switches I only need one to control the lights and can use the others e.g. to set a specific scene or turn on the radio. Bathroom Light \u00b6 My bathroom light is dumb, so it's controlled via power on/off of the shelly switch. For that reason and because of some edge cases there's a bit more logic behind this automation.. There's a few requirements behind this automation. The light turns on automatically with motion detection. But I don't want to be blinded a night, since it's a dumb light it can't do dimming, so the light should only turn on during certain times (06:20-22:00 during the week or 08:00-22:00 on a weekend). But if I'm up late it should still turn on automatically, so I've added the condition that if the kitchen light is already on, it's probably fine to turn on the bathroom light as well and not check the time condition. But then there was another problem. Since it's a dumb light tube it's a bit slow to turn on. This could result in user error. E.g. the motion detector triggers the light to turn on but the user thinks it didn't work or doesn't know about the motion detector and presses the button. Now the light turns off again and the user wonders why the button didn't work. So to fix this behavior I've added a locking logic that blocks further commands for 2 seconds if the light has been turned on via the button or motion detection. Devices \u00b6 Washing machine/dryer has finished \u00b6 If the washing machine or dryer finishes their work a push notification is sent to my phone and Google Home announces that the washer or dryer has finished. That washing/drying has finished is detected via the power consumption of the respective device with a MyStrom switch. The push notification is sent via the Home Assistant App on my phone. The Google Home announcement uses TTS (text to speech) and Chromecast functionality. Template sensor to detect if the washing machine is on/off: binary_sensor : - platform : template sensors : washingmachine_state : friendly_name : \"Washing Machine State\" delay_off : # Only switches states after new state existed for x minutes minutes : 3 icon_template : mdi:washing-machine value_template : \"{{ states.switch.mystrom_washingmachine.attributes.current_power_w | default(0) |float > 10}}\" Push Notification { \"title\" : \"Washing Machine done \ud83d\udc55\" , \"message\" : \"Don't wait for your clothes to wrinkle!\" } Turn off the charging station \u00b6 I've set up a charging station for various camera batteries, drone, battery pack etc. To prevent them from being charged constantly I've set up a myStrom switch that is turned off after 5h. So if I plan on going somewhere where I need a fully charged battery in one of these devices I can simply say \"Okay Google turn on the charging station\" and forget about it. It's quite simple but very convenient. TV & Entertainment \u00b6 iOS TV Remote \u00b6 iOS has a virtual TV remote in the control center. This remote can be used to control Apple TVs but also Homekit-compatible TVs of other manufacturers. Since my TV doesn't support Homekit natively I wanted to recreate this feature using a Logitech IR blaster that sends the remote control commands to the TV. Samsung TV playing nice with the native iOS remote utility \ud83d\ude04 - of course using @home_assistant for the integration. The commands are sent over IR so really any TV could be added like this pic.twitter.com/tehkkdGzei \u2014 Theo Winter (@eletiy) July 9, 2020 So what it does is listen to homekit_tv_remote_key_pressed events, check that they're for the correct TV and then map them to the individual IR blaster commands. E.g. payload.event.key_name = arrow_left maps to remote.send_command with the following payload: { \"device\" : \"Samsung TV\" , \"command\" : [ \"DirectionLeft\" ] } TV App Launcher \u00b6 This one is a bit of a monster. Basically what it allows is to have a Channel selector drop down in the frontend where you can choose the App that should be launched/switch to on the TV. As an added benefit this also work with Google Home. So I can say stuff like: \"Okay Google switch to [ PlayStation /Apple TV/Netflix/...]\" The REST APIs of the TV are shit.. they allow some things but not all - so this is automation is a mixture of REST calls and IR commands. You may be wondering why use the REST APIs at all? Since the TV menu is basically a list of apps, the REST API allows me to jump to a \"safe\" point in that list. For example I can launch YouTube over the REST Api. I know that I've placed YouTube as the first App, so now I can use IR commands to move 2 positions to the right and for example launch Spotify. If I didn't have the REST command there'd be no way for me to know which App is open at the moment and navigate the menu. In case you're wondering about the Apple TV Wallpaper path. It's a hacky way to force Apple TV to show the screensaver immediately. The screensaver shows flyovers of major cities all over the world and it's nice to have on as a bit of decoration/art.","title":"Automation Examples"},{"location":"automations/examples/#universal","text":"","title":"Universal"},{"location":"automations/examples/#vacuum-the-floor-when-im-not-home","text":"At 10am a check is executed whether the apartment is occupied or not. If it's not occupied the Roomba is triggered to start vacuuming the floor. If the apartment is occupied a notification is sent to me via Telegram to inform me that the cleaning cycle was not started. Node RED Flow [ { \"id\" : \"27f43369.1137ec\" , \"type\" : \"subflow\" , \"name\" : \"apartment occupied?\" , \"info\" : \"\" , \"category\" : \"\" , \"in\" : [ { \"x\" : 181.5 , \"y\" : 69 , \"wires\" : [ { \"id\" : \"cbbdb47d.a4ed48\" } ] } ], \"out\" : [ { \"x\" : 700 , \"y\" : 40 , \"wires\" : [ { \"id\" : \"1792a55d.ddc24b\" , \"port\" : 0 } ] }, { \"x\" : 700 , \"y\" : 90 , \"wires\" : [ { \"id\" : \"1792a55d.ddc24b\" , \"port\" : 1 } ] } ], \"outputLabels\" : [ \"clear\" , \"occupied\" ] }, { \"id\" : \"cbbdb47d.a4ed48\" , \"type\" : \"api-current-state\" , \"z\" : \"27f43369.1137ec\" , \"name\" : \"apartment occupancy\" , \"server\" : \"78fe396.483dac8\" , \"outputs\" : 1 , \"halt_if\" : \"\" , \"halt_if_type\" : \"str\" , \"halt_if_compare\" : \"is\" , \"override_topic\" : true , \"entity_id\" : \"binary_sensor.apartment_occupancy\" , \"state_type\" : \"habool\" , \"override_payload\" : true , \"override_data\" : true , \"x\" : 361.5 , \"y\" : 69 , \"wires\" : [ [ \"1792a55d.ddc24b\" ] ] }, { \"id\" : \"1792a55d.ddc24b\" , \"type\" : \"switch\" , \"z\" : \"27f43369.1137ec\" , \"name\" : \"is occupied?\" , \"property\" : \"payload\" , \"propertyType\" : \"msg\" , \"rules\" : [ { \"t\" : \"false\" }, { \"t\" : \"true\" } ], \"checkall\" : \"true\" , \"repair\" : false , \"outputs\" : 2 , \"x\" : 554.5 , \"y\" : 69 , \"wires\" : [ [], [] ] }, { \"id\" : \"74556465.5e1fac\" , \"type\" : \"api-call-service\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"Roomba ON\" , \"server\" : \"78fe396.483dac8\" , \"version\" : 1 , \"debugenabled\" : false , \"service_domain\" : \"vacuum\" , \"service\" : \"start\" , \"entityId\" : \"vacuum.ghost\" , \"data\" : \"\" , \"dataType\" : \"json\" , \"mergecontext\" : \"\" , \"output_location\" : \"payload\" , \"output_location_type\" : \"msg\" , \"mustacheAltTags\" : false , \"x\" : 570 , \"y\" : 40 , \"wires\" : [ [] ] }, { \"id\" : \"d5a40336.045ed\" , \"type\" : \"inject\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"10am weekdays\" , \"repeat\" : \"\" , \"crontab\" : \"00 10 * * 1,2,3,4,5\" , \"once\" : false , \"onceDelay\" : 0.1 , \"topic\" : \"\" , \"payload\" : \"true\" , \"payloadType\" : \"bool\" , \"x\" : 144.5 , \"y\" : 60 , \"wires\" : [ [ \"b816139a.b3f9e\" ] ] }, { \"id\" : \"b816139a.b3f9e\" , \"type\" : \"subflow:27f43369.1137ec\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"\" , \"x\" : 360 , \"y\" : 60 , \"wires\" : [ [ \"74556465.5e1fac\" ], [ \"b94a88b0.eff1c8\" ] ] }, { \"id\" : \"b94a88b0.eff1c8\" , \"type\" : \"api-call-service\" , \"z\" : \"d3ff7562.eebf38\" , \"name\" : \"Telegram Log\" , \"server\" : \"78fe396.483dac8\" , \"version\" : \"1\" , \"debugenabled\" : false , \"service_domain\" : \"telegram_bot\" , \"service\" : \"send_message\" , \"entityId\" : \"\" , \"data\" : \"{ \\\" message \\\" : \\\" Not launching Roomba because someone's home \\\" }\" , \"dataType\" : \"json\" , \"mergecontext\" : \"\" , \"output_location\" : \"payload\" , \"output_location_type\" : \"msg\" , \"mustacheAltTags\" : false , \"x\" : 570 , \"y\" : 80 , \"wires\" : [ [] ] }, { \"id\" : \"78fe396.483dac8\" , \"type\" : \"server\" , \"name\" : \"Home Assistant\" , \"legacy\" : false , \"addon\" : true , \"rejectUnauthorizedCerts\" : true , \"ha_boolean\" : \"y|yes|true|on|home|open\" , \"connectionDelay\" : true , \"cacheJson\" : true } ]","title":"Vacuum the floor when I'm not home"},{"location":"automations/examples/#lights","text":"","title":"Lights"},{"location":"automations/examples/#kitchen-overhead-light","text":"If motion is detected at the sink, the kitchen overhead light is turned on. At the same time a timer is set for 3mins. If further motion is detected the timer is reset. If no more motion occurs and the timer runs out the light is turned off again.","title":"Kitchen Overhead Light"},{"location":"automations/examples/#shelly-light-switches","text":"To prevent the hue lights from being turned off fully I've added a Shelly controller behind each light switch. This detaches the switch from turn on/off the power and instead sends a MQTT messages to Home Assistant that the button was pressed. So in order for some of the light switches to actually turn on/off lights there needs to be a really simple automation connecting the action of pressing the switch with some lights that can be controlled. Another advantage of this system is that I've got light switches to spare for other functions. Since for example in the living room I'm happy with turning on/off all the lights at the same time. So of 4 switches I only need one to control the lights and can use the others e.g. to set a specific scene or turn on the radio.","title":"Shelly Light Switches"},{"location":"automations/examples/#bathroom-light","text":"My bathroom light is dumb, so it's controlled via power on/off of the shelly switch. For that reason and because of some edge cases there's a bit more logic behind this automation.. There's a few requirements behind this automation. The light turns on automatically with motion detection. But I don't want to be blinded a night, since it's a dumb light it can't do dimming, so the light should only turn on during certain times (06:20-22:00 during the week or 08:00-22:00 on a weekend). But if I'm up late it should still turn on automatically, so I've added the condition that if the kitchen light is already on, it's probably fine to turn on the bathroom light as well and not check the time condition. But then there was another problem. Since it's a dumb light tube it's a bit slow to turn on. This could result in user error. E.g. the motion detector triggers the light to turn on but the user thinks it didn't work or doesn't know about the motion detector and presses the button. Now the light turns off again and the user wonders why the button didn't work. So to fix this behavior I've added a locking logic that blocks further commands for 2 seconds if the light has been turned on via the button or motion detection.","title":"Bathroom Light"},{"location":"automations/examples/#devices","text":"","title":"Devices"},{"location":"automations/examples/#washing-machinedryer-has-finished","text":"If the washing machine or dryer finishes their work a push notification is sent to my phone and Google Home announces that the washer or dryer has finished. That washing/drying has finished is detected via the power consumption of the respective device with a MyStrom switch. The push notification is sent via the Home Assistant App on my phone. The Google Home announcement uses TTS (text to speech) and Chromecast functionality. Template sensor to detect if the washing machine is on/off: binary_sensor : - platform : template sensors : washingmachine_state : friendly_name : \"Washing Machine State\" delay_off : # Only switches states after new state existed for x minutes minutes : 3 icon_template : mdi:washing-machine value_template : \"{{ states.switch.mystrom_washingmachine.attributes.current_power_w | default(0) |float > 10}}\" Push Notification { \"title\" : \"Washing Machine done \ud83d\udc55\" , \"message\" : \"Don't wait for your clothes to wrinkle!\" }","title":"Washing machine/dryer has finished"},{"location":"automations/examples/#turn-off-the-charging-station","text":"I've set up a charging station for various camera batteries, drone, battery pack etc. To prevent them from being charged constantly I've set up a myStrom switch that is turned off after 5h. So if I plan on going somewhere where I need a fully charged battery in one of these devices I can simply say \"Okay Google turn on the charging station\" and forget about it. It's quite simple but very convenient.","title":"Turn off the charging station"},{"location":"automations/examples/#tv-entertainment","text":"","title":"TV &amp; Entertainment"},{"location":"automations/examples/#ios-tv-remote","text":"iOS has a virtual TV remote in the control center. This remote can be used to control Apple TVs but also Homekit-compatible TVs of other manufacturers. Since my TV doesn't support Homekit natively I wanted to recreate this feature using a Logitech IR blaster that sends the remote control commands to the TV. Samsung TV playing nice with the native iOS remote utility \ud83d\ude04 - of course using @home_assistant for the integration. The commands are sent over IR so really any TV could be added like this pic.twitter.com/tehkkdGzei \u2014 Theo Winter (@eletiy) July 9, 2020 So what it does is listen to homekit_tv_remote_key_pressed events, check that they're for the correct TV and then map them to the individual IR blaster commands. E.g. payload.event.key_name = arrow_left maps to remote.send_command with the following payload: { \"device\" : \"Samsung TV\" , \"command\" : [ \"DirectionLeft\" ] }","title":"iOS TV Remote"},{"location":"automations/examples/#tv-app-launcher","text":"This one is a bit of a monster. Basically what it allows is to have a Channel selector drop down in the frontend where you can choose the App that should be launched/switch to on the TV. As an added benefit this also work with Google Home. So I can say stuff like: \"Okay Google switch to [ PlayStation /Apple TV/Netflix/...]\" The REST APIs of the TV are shit.. they allow some things but not all - so this is automation is a mixture of REST calls and IR commands. You may be wondering why use the REST APIs at all? Since the TV menu is basically a list of apps, the REST API allows me to jump to a \"safe\" point in that list. For example I can launch YouTube over the REST Api. I know that I've placed YouTube as the first App, so now I can use IR commands to move 2 positions to the right and for example launch Spotify. If I didn't have the REST command there'd be no way for me to know which App is open at the moment and navigate the menu. In case you're wondering about the Apple TV Wallpaper path. It's a hacky way to force Apple TV to show the screensaver immediately. The screensaver shows flyovers of major cities all over the world and it's nice to have on as a bit of decoration/art.","title":"TV App Launcher"},{"location":"automations/exporting-apple-health-data-to-home-assistant/","text":"I've recently started using the excellent Influx addon to store data that I want to keep around for a long time. Influx is a time series database which means that it has been optimized to store data through associated pairs of time(s) and value(s). To make use of that data stored in InfluxDB I use a Grafana Dashboard. (Another excellent addon for Home Assistant \ud83d\ude04) By gathering and analyzing health data you can get some interesting insights about yourself. For example whether there's a correlation between sleep duration and how much your work out. Or if the weather has an effect on your mood. Of course that data could also be used for automations.. e.g. the waking time of the alarm clock is automatically offset by 30min if you went to bed late. With tons of data there's basically no limit to what you can do. Sadly the Home Assistant app for iOS doesn't have access to Apple Health data and likely never will. This is due to Apple's privacy policy that only allows access to health data for apps that have a specific health focus. This is discussed in this feature request for the Home Assistant app. There's an app for that \u00b6 Luckily someone made an app to automatically export Apple Health data to a user defined web endpoint. You can find it here . The data is uploaded in a POST request as JSON. The user can define how many days of data should be uploaded and in what time interval the data should be aggregated. Personally I'm uploading the data of \"yesterday until now\" in a daily aggregation format. So for every measurment there's a total value of yesterday and a up-to-now value for today. Setting up an endpoint \u00b6 I'm using the webhook node in Node RED to create an endpoint for the POST request of the health export app. The webhook node is really straight forward to use, all you do is set an id for the hook and then you can send data to https://<ip>:<port>/api/webhook/YOUR_ID . To test this right away it's best to use a debug node to simply print the json coming in. The data coming in should look like this. { \"data\" : { \"metrics\" : [ { \"name\" : \"active_energy\" , \"units\" \"kJ\" \"data\" : [ { \"qty\" : 1599 , \"date\" : \"2021-03-17 00:00:00 +0100\" }, { \"qty\" : 1200 , \"date\" : \"2021-03-16 00:00:00 +0100\" } ] }, ... ], \"workouts\" : [] } } Storing the data in InfluxDB \u00b6 Writing to Influx is fairly simple. I'm using the \" influx batch node \" to write all the measurements to InfluxDB in one go. But you could also split them up into seperate messages and use the regular \"influx out\" node instead. Of course the InfluxDB Batch node can't consume the data just the way it comes out of the export json.. so we need to do a little bit of mapping before we can forward it. In order to be compatible with other measurments that are written directly from Home Assistant to Influx I'm using the same format. This is the content of the function node you can see above. It transforms the json provided by the endpoint into one that can be imported via the batch node. var mappedMetrics = []; //e.g. active_energy msg . payload . data . metrics . forEach ( metric => { //e.g. measurement for 01.01.2020 of active_energy metric . data . forEach ( actualMeasurement => { mappedMetrics . push ({ measurement : metric . units , //kJ fields : { ...( actualMeasurement . qty !== undefined && { value : actualMeasurement . qty }), //2500 default ...( actualMeasurement . Avg !== undefined && { Avg : actualMeasurement . Avg }), //Heartrate special ...( actualMeasurement . Max !== undefined && { Max : actualMeasurement . Max }), //Heartrate special ...( actualMeasurement . Min !== undefined && { Min : actualMeasurement . Min }), //Heartrate special ...( actualMeasurement . inBed !== undefined && { inBed : actualMeasurement . inBed }), //Bed special ...( actualMeasurement . asleep !== undefined && { asleep : actualMeasurement . asleep }), //Bed special ...( actualMeasurement . sleepSource !== undefined && { sleepSource : actualMeasurement . sleepSource }), //Bed special ...( actualMeasurement . inBedSource !== undefined && { inBedSource : actualMeasurement . inBedSource }), //Bed special }, tags : { entity_id : metric . name //active_energy }, timestamp : Date . parse ( actualMeasurement . date ) //2021-03-16 00:00:00 +0100 }); }) }); msg . payload = mappedMetrics ; return msg ; Finally the batch node itself doesn't have any special settings. Except maybe one, the configuration for the InfluxDB has to be in the \"1.x\" version format. Since that's the only one where you can specify which db the data should be written to. If writing to the InfluxDB doesn't work for some reason then error logs should appear in the debug panel of Node RED. Historical data \u00b6 The Node RED flow we've just set up is fully capable of importing historic data as well. So you can use the Manual Sync function of the Health Export app to upload all your existing Apple Health data as well. With a bit of experimentation I've found out that about half a month worth of data can be imported in one go. More then that and the endpoint doesn't seem to be able to handle the request anymore. So you need to do a few requests if you want to upload a years worth of data.. but I think it's not too much of a hassle given that it's a one time thing and all future data is uploaded automatically.","title":"Exporting Apple Health data to Home Assistant"},{"location":"automations/exporting-apple-health-data-to-home-assistant/#theres-an-app-for-that","text":"Luckily someone made an app to automatically export Apple Health data to a user defined web endpoint. You can find it here . The data is uploaded in a POST request as JSON. The user can define how many days of data should be uploaded and in what time interval the data should be aggregated. Personally I'm uploading the data of \"yesterday until now\" in a daily aggregation format. So for every measurment there's a total value of yesterday and a up-to-now value for today.","title":"There's an app for that"},{"location":"automations/exporting-apple-health-data-to-home-assistant/#setting-up-an-endpoint","text":"I'm using the webhook node in Node RED to create an endpoint for the POST request of the health export app. The webhook node is really straight forward to use, all you do is set an id for the hook and then you can send data to https://<ip>:<port>/api/webhook/YOUR_ID . To test this right away it's best to use a debug node to simply print the json coming in. The data coming in should look like this. { \"data\" : { \"metrics\" : [ { \"name\" : \"active_energy\" , \"units\" \"kJ\" \"data\" : [ { \"qty\" : 1599 , \"date\" : \"2021-03-17 00:00:00 +0100\" }, { \"qty\" : 1200 , \"date\" : \"2021-03-16 00:00:00 +0100\" } ] }, ... ], \"workouts\" : [] } }","title":"Setting up an endpoint"},{"location":"automations/exporting-apple-health-data-to-home-assistant/#storing-the-data-in-influxdb","text":"Writing to Influx is fairly simple. I'm using the \" influx batch node \" to write all the measurements to InfluxDB in one go. But you could also split them up into seperate messages and use the regular \"influx out\" node instead. Of course the InfluxDB Batch node can't consume the data just the way it comes out of the export json.. so we need to do a little bit of mapping before we can forward it. In order to be compatible with other measurments that are written directly from Home Assistant to Influx I'm using the same format. This is the content of the function node you can see above. It transforms the json provided by the endpoint into one that can be imported via the batch node. var mappedMetrics = []; //e.g. active_energy msg . payload . data . metrics . forEach ( metric => { //e.g. measurement for 01.01.2020 of active_energy metric . data . forEach ( actualMeasurement => { mappedMetrics . push ({ measurement : metric . units , //kJ fields : { ...( actualMeasurement . qty !== undefined && { value : actualMeasurement . qty }), //2500 default ...( actualMeasurement . Avg !== undefined && { Avg : actualMeasurement . Avg }), //Heartrate special ...( actualMeasurement . Max !== undefined && { Max : actualMeasurement . Max }), //Heartrate special ...( actualMeasurement . Min !== undefined && { Min : actualMeasurement . Min }), //Heartrate special ...( actualMeasurement . inBed !== undefined && { inBed : actualMeasurement . inBed }), //Bed special ...( actualMeasurement . asleep !== undefined && { asleep : actualMeasurement . asleep }), //Bed special ...( actualMeasurement . sleepSource !== undefined && { sleepSource : actualMeasurement . sleepSource }), //Bed special ...( actualMeasurement . inBedSource !== undefined && { inBedSource : actualMeasurement . inBedSource }), //Bed special }, tags : { entity_id : metric . name //active_energy }, timestamp : Date . parse ( actualMeasurement . date ) //2021-03-16 00:00:00 +0100 }); }) }); msg . payload = mappedMetrics ; return msg ; Finally the batch node itself doesn't have any special settings. Except maybe one, the configuration for the InfluxDB has to be in the \"1.x\" version format. Since that's the only one where you can specify which db the data should be written to. If writing to the InfluxDB doesn't work for some reason then error logs should appear in the debug panel of Node RED.","title":"Storing the data in InfluxDB"},{"location":"automations/exporting-apple-health-data-to-home-assistant/#historical-data","text":"The Node RED flow we've just set up is fully capable of importing historic data as well. So you can use the Manual Sync function of the Health Export app to upload all your existing Apple Health data as well. With a bit of experimentation I've found out that about half a month worth of data can be imported in one go. More then that and the endpoint doesn't seem to be able to handle the request anymore. So you need to do a few requests if you want to upload a years worth of data.. but I think it's not too much of a hassle given that it's a one time thing and all future data is uploaded automatically.","title":"Historical data"},{"location":"automations/getting-started-with-node-red/","text":"Installation \u00b6 The best way to install Node-RED is via the Home Assistant Supervisor. This way you don't have to do any manual configuration to get Home Assistant to talk to Node-RED. It does however require that you're either running the full Home Assistant OS or Home Assistant Supervised on your own OS. If you're only running Home Assistant Core you won't have access to the supervisor. Navigate to Supervisor in the Sidebar of your Home Assistant Select Add-on Store and locate Node-RED under Home Assistant Community Add-ons Install the addon and then go to the configuration tab Set a credential_secret, which is used to encrypt sensitive data Start Node-RED, you can now access it either via the sidebar or the \"OPEN WEB UI\" button. Your first automation \u00b6 When you're starting Node-RED for the first time you're seeing a UI similar to the screenshot above. On the left side you've got quite a long list of nodes that can be used to create your desired automation. This can be a bit overwhelming a first since you first need to get to know some of the nodes and what you can do with them. So to get aquainted with some of the nodes we're going to create a little \"Hello World\" automation. Instead of printing \"Hello World\" this automation is going to turn on a light at a specific time. If you don't have a light you can substitue it with any other controllable device that you've set up in Home Assistant. Calling a service \u00b6 To control a light (or another device) we need to use the \"call service\" node from the Home Assistant category. Drag it onto the flow canvas. Double click the node to open it's configuration panel. You can give it a name, e.g. \"Hello World Light\". The fields below offer suggestions/autocompletion based on the devices you have configured in Home Assistant. Domain : light Service : turn_on Entity id : start typing the name of a lights Home Assistant id and it should autocomplete Click done to close the node configuration Manual testing \u00b6 Now that we have a node that can turn on a light we need a way to test it. To do this we use a \"Inject\" node. It's not in the Home Assistant category so you'll need to scroll down to \"common\" or use the search box in the top left corner. Drag a \"Inject\" node onto the flow. By default the Inject node injects a timestamp message. This is fine since our service (the light) doesn't need to read the message at this time. It is simply trigged by the incomming message. So we don't need to change the configuration of the inject node and can simple connect the two nodes with a line. Now we're ready for our first deployment. Press the deploy button. After deploying the flow you can click on the small grey square in front of the Inject node to manually trigger it. Your chosen light should now turn on. Debugging \u00b6 If you want to see what a message sent between nodes looks like you can use the \"Debug\" node to inspect them. In order to do this you'll need to search for the Debug node in the nodes panel. Drag a \"Debug\" node onto the flow. Double-click the node to bring up the configuration panel. In the Output dropdown select \"complete msg object\". This will let you see the whole message instead of just the payload. Click done to close the panel. Attach the node to any place you want to inspect. Deploy the flow and trigger the inject node again. If you switch to the debug panel (little bug icon, top right corner) you can now see the two messages that have been received by the debug node. In this case they should look identical since the \"Call service\" node doesn't change the message. But you can see how this is useful if we're sending more complex messages. But wait, this isn't an automation... \u00b6 Right, so far we've been pressing the inject button manually. But maybe we want to light to turn on automatically in the evening. This can be accomplished easily by changing the configuration of the inject node to be triggered at a certain time. Double-click the Inject node to bring up the configuration In the Repeat dropdown at the bottom choose \"at a specific time\". Now you can select a time & days when a message should be injected. If you need a more complex schedule there are other nodes that can for example accept a CRON statement. Using sensor input \u00b6 Of course we can also use a sensors as input to turn on our light. To do this we use a \"events: state\" node from the Home Assistant node panel. Drag a \"events: state\" node onto the flow. Doubleclick the node to open it's configuration panel Entity id: * Start typing the id of a sensor you have configured in Home Assistant, it should autocomplete. For this example we can use \"sun.sun\" which is a virtual sensor provided by Home Assistant. It reports the state of the sun \"above_horizon\", \"below_horizon\" based on your configured location. We could listen to any state change, but we want to turn on the light only when the sun has set. So we're going to type \"below_horizon\" into the If state is field. Finally we need to connect our new node to the Light node and deploy. In order to test this, you'll need to wait for sunset.. :) or change the sensor to something else, e.g. a motion sensor. But don't forget to change or remove the state condition if you do use something other than the sun. This concludes my little intro to writing automations in Node-RED, obviously a lot more can be done. But with a bit of experimentation and these few basic nodes a lot of automations are already possible. Most useful nodes \u00b6 This is a small list of the nodes that I use in 90% of my automations. Occasionally another special node is useful, but these cover most cases. Node Icon Category Description Example call service tbd home assistant Sends a request to home assistant for any domain and service available Turn on a light event: state tbd home assistant Outputs state_changed event types sent from Home Assistant Motion sensor detected motion, light was turned on, sun has risen Debug tbd common Displays selected message properties in the debug sidebar tab Inject tbd common Injects a message into a flow either manually or at regular intervals Inject message at 20:00 on Wednesdays Link in/out tbd common Create virtual wires between flows. Connect nodes across flows or reduce messy cabling in flows with lots of connections Switch tbd function Route messages based on their property values or sequence position. Basically an if statement if temperature > 24 turn off heating, otherwise turn on Function tbd function A JavaScript function to run against the messages being received by the node Manipulate a message with javascript, e.g. combine sensors values, round numbers etc.","title":"Getting started"},{"location":"automations/getting-started-with-node-red/#installation","text":"The best way to install Node-RED is via the Home Assistant Supervisor. This way you don't have to do any manual configuration to get Home Assistant to talk to Node-RED. It does however require that you're either running the full Home Assistant OS or Home Assistant Supervised on your own OS. If you're only running Home Assistant Core you won't have access to the supervisor. Navigate to Supervisor in the Sidebar of your Home Assistant Select Add-on Store and locate Node-RED under Home Assistant Community Add-ons Install the addon and then go to the configuration tab Set a credential_secret, which is used to encrypt sensitive data Start Node-RED, you can now access it either via the sidebar or the \"OPEN WEB UI\" button.","title":"Installation"},{"location":"automations/getting-started-with-node-red/#your-first-automation","text":"When you're starting Node-RED for the first time you're seeing a UI similar to the screenshot above. On the left side you've got quite a long list of nodes that can be used to create your desired automation. This can be a bit overwhelming a first since you first need to get to know some of the nodes and what you can do with them. So to get aquainted with some of the nodes we're going to create a little \"Hello World\" automation. Instead of printing \"Hello World\" this automation is going to turn on a light at a specific time. If you don't have a light you can substitue it with any other controllable device that you've set up in Home Assistant.","title":"Your first automation"},{"location":"automations/getting-started-with-node-red/#calling-a-service","text":"To control a light (or another device) we need to use the \"call service\" node from the Home Assistant category. Drag it onto the flow canvas. Double click the node to open it's configuration panel. You can give it a name, e.g. \"Hello World Light\". The fields below offer suggestions/autocompletion based on the devices you have configured in Home Assistant. Domain : light Service : turn_on Entity id : start typing the name of a lights Home Assistant id and it should autocomplete Click done to close the node configuration","title":"Calling a service"},{"location":"automations/getting-started-with-node-red/#manual-testing","text":"Now that we have a node that can turn on a light we need a way to test it. To do this we use a \"Inject\" node. It's not in the Home Assistant category so you'll need to scroll down to \"common\" or use the search box in the top left corner. Drag a \"Inject\" node onto the flow. By default the Inject node injects a timestamp message. This is fine since our service (the light) doesn't need to read the message at this time. It is simply trigged by the incomming message. So we don't need to change the configuration of the inject node and can simple connect the two nodes with a line. Now we're ready for our first deployment. Press the deploy button. After deploying the flow you can click on the small grey square in front of the Inject node to manually trigger it. Your chosen light should now turn on.","title":"Manual testing"},{"location":"automations/getting-started-with-node-red/#debugging","text":"If you want to see what a message sent between nodes looks like you can use the \"Debug\" node to inspect them. In order to do this you'll need to search for the Debug node in the nodes panel. Drag a \"Debug\" node onto the flow. Double-click the node to bring up the configuration panel. In the Output dropdown select \"complete msg object\". This will let you see the whole message instead of just the payload. Click done to close the panel. Attach the node to any place you want to inspect. Deploy the flow and trigger the inject node again. If you switch to the debug panel (little bug icon, top right corner) you can now see the two messages that have been received by the debug node. In this case they should look identical since the \"Call service\" node doesn't change the message. But you can see how this is useful if we're sending more complex messages.","title":"Debugging"},{"location":"automations/getting-started-with-node-red/#but-wait-this-isnt-an-automation","text":"Right, so far we've been pressing the inject button manually. But maybe we want to light to turn on automatically in the evening. This can be accomplished easily by changing the configuration of the inject node to be triggered at a certain time. Double-click the Inject node to bring up the configuration In the Repeat dropdown at the bottom choose \"at a specific time\". Now you can select a time & days when a message should be injected. If you need a more complex schedule there are other nodes that can for example accept a CRON statement.","title":"But wait, this isn't an automation..."},{"location":"automations/getting-started-with-node-red/#using-sensor-input","text":"Of course we can also use a sensors as input to turn on our light. To do this we use a \"events: state\" node from the Home Assistant node panel. Drag a \"events: state\" node onto the flow. Doubleclick the node to open it's configuration panel Entity id: * Start typing the id of a sensor you have configured in Home Assistant, it should autocomplete. For this example we can use \"sun.sun\" which is a virtual sensor provided by Home Assistant. It reports the state of the sun \"above_horizon\", \"below_horizon\" based on your configured location. We could listen to any state change, but we want to turn on the light only when the sun has set. So we're going to type \"below_horizon\" into the If state is field. Finally we need to connect our new node to the Light node and deploy. In order to test this, you'll need to wait for sunset.. :) or change the sensor to something else, e.g. a motion sensor. But don't forget to change or remove the state condition if you do use something other than the sun. This concludes my little intro to writing automations in Node-RED, obviously a lot more can be done. But with a bit of experimentation and these few basic nodes a lot of automations are already possible.","title":"Using sensor input"},{"location":"automations/getting-started-with-node-red/#most-useful-nodes","text":"This is a small list of the nodes that I use in 90% of my automations. Occasionally another special node is useful, but these cover most cases. Node Icon Category Description Example call service tbd home assistant Sends a request to home assistant for any domain and service available Turn on a light event: state tbd home assistant Outputs state_changed event types sent from Home Assistant Motion sensor detected motion, light was turned on, sun has risen Debug tbd common Displays selected message properties in the debug sidebar tab Inject tbd common Injects a message into a flow either manually or at regular intervals Inject message at 20:00 on Wednesdays Link in/out tbd common Create virtual wires between flows. Connect nodes across flows or reduce messy cabling in flows with lots of connections Switch tbd function Route messages based on their property values or sequence position. Basically an if statement if temperature > 24 turn off heating, otherwise turn on Function tbd function A JavaScript function to run against the messages being received by the node Manipulate a message with javascript, e.g. combine sensors values, round numbers etc.","title":"Most useful nodes"},{"location":"automations/node-red-utilities/","text":"Node-RED knows a concept called subflows that can be used to create flows that can be re-used easily. Think of it as helper methods. Here are a few that I've found useful when building more complex automations. Home Assistant Secrets \u00b6 With this subflow you can access the secrets.yaml file that contains your Home Assistant secrets (api keys, passwords etc.) from Node-RED. The subflow accept a secret_id as input and returns the loaded secret as msg.secret attribute in the output message. Depending on your setup you may need to edit the location of the secret.yaml file in the secrets node. Get Home Assistant Secret Flow - Copy & Paste into Node-RED > Import [ { \"id\" : \"d4379195.7e131\" , \"type\" : \"subflow\" , \"name\" : \"get secret\" , \"info\" : \"\" , \"category\" : \"\" , \"in\" : [ { \"x\" : 40 , \"y\" : 40 , \"wires\" : [ { \"id\" : \"358bbb81.f1b0c4\" } ] } ], \"out\" : [ { \"x\" : 1020 , \"y\" : 40 , \"wires\" : [ { \"id\" : \"358bbb81.f1b0c4\" , \"port\" : 0 }, { \"id\" : \"cb9383d4.07e1a\" , \"port\" : 0 }, { \"id\" : \"cb9383d4.07e1a\" , \"port\" : 1 } ] } ], \"env\" : [ { \"name\" : \"secret_id\" , \"type\" : \"str\" , \"value\" : \"\" , \"ui\" : { \"icon\" : \"font-awesome/fa-lock\" , \"type\" : \"input\" , \"opts\" : { \"types\" : [ \"str\" ] } } } ], \"color\" : \"#3FADB5\" , \"icon\" : \"font-awesome/fa-lock\" }, { \"id\" : \"cbb350e7.54a96\" , \"type\" : \"file in\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"secrets\" , \"filename\" : \"/config/secrets.yaml\" , \"format\" : \"utf8\" , \"chunk\" : false , \"sendError\" : false , \"encoding\" : \"none\" , \"x\" : 380 , \"y\" : 80 , \"wires\" : [ [ \"168da1d3.7b3ace\" ] ] }, { \"id\" : \"168da1d3.7b3ace\" , \"type\" : \"yaml\" , \"z\" : \"d4379195.7e131\" , \"property\" : \"payload\" , \"name\" : \"\" , \"x\" : 510 , \"y\" : 80 , \"wires\" : [ [ \"cd100a20.901b08\" ] ] }, { \"id\" : \"cd100a20.901b08\" , \"type\" : \"function\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"save secrets in memory\" , \"func\" : \"for (let [key, value] of Object.entries(msg.payload)) { \\n flow.set(key,value); \\n } \\n return msg;\" , \"outputs\" : 1 , \"noerr\" : 0 , \"initialize\" : \"\" , \"finalize\" : \"\" , \"x\" : 690 , \"y\" : 80 , \"wires\" : [ [ \"cb9383d4.07e1a\" ] ] }, { \"id\" : \"358bbb81.f1b0c4\" , \"type\" : \"function\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"get already loaded secret\" , \"func\" : \"msg.secret_id = env.get( \\\" secret_id \\\" ); \\n msg.secret = flow.get(msg.secret_id); \\n\\n if (msg.secret !== undefined && msg.secret !== null) { \\n return [ msg, null ]; \\n } else { \\n msg.payload_backup = msg.payload; \\n return [ null, msg ]; \\n }\" , \"outputs\" : 2 , \"noerr\" : 0 , \"initialize\" : \"\" , \"finalize\" : \"\" , \"x\" : 190 , \"y\" : 40 , \"wires\" : [ [], [ \"cbb350e7.54a96\" ] ], \"outputLabels\" : [ \"secret was loaded\" , \"secret is not loaded yet\" ] }, { \"id\" : \"cb9383d4.07e1a\" , \"type\" : \"function\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"export secret\" , \"func\" : \"msg.secret = flow.get(msg.secret_id); \\n msg.payload = msg.payload_backup; \\n delete msg.payload_backup; \\n delete msg.filename; \\n\\n if (msg.secret !== undefined && msg.secret !== null) { \\n return [ msg, null ]; \\n } else { \\n msg.error = \\\" SECRET DOES NOT EXIST! \\\"\\n return [ null, msg ]; \\n }\" , \"outputs\" : 2 , \"noerr\" : 0 , \"initialize\" : \"\" , \"finalize\" : \"\" , \"x\" : 890 , \"y\" : 80 , \"wires\" : [ [], [ \"9020c683.c61c98\" ] ], \"outputLabels\" : [ \"secret was loaded\" , \"secret does not exist\" ] }, { \"id\" : \"9020c683.c61c98\" , \"type\" : \"debug\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"log error\" , \"active\" : true , \"tosidebar\" : true , \"console\" : false , \"tostatus\" : false , \"complete\" : \"true\" , \"targetType\" : \"full\" , \"statusVal\" : \"\" , \"statusType\" : \"auto\" , \"x\" : 1060 , \"y\" : 100 , \"wires\" : [] }, { \"id\" : \"e8afbb97.2bf848\" , \"type\" : \"subflow:d4379195.7e131\" , \"z\" : \"84cddc8f.78464\" , \"name\" : \"\" , \"x\" : 450 , \"y\" : 900 , \"wires\" : [ [] ] } ]","title":"Node-RED Utilities"},{"location":"automations/node-red-utilities/#home-assistant-secrets","text":"With this subflow you can access the secrets.yaml file that contains your Home Assistant secrets (api keys, passwords etc.) from Node-RED. The subflow accept a secret_id as input and returns the loaded secret as msg.secret attribute in the output message. Depending on your setup you may need to edit the location of the secret.yaml file in the secrets node. Get Home Assistant Secret Flow - Copy & Paste into Node-RED > Import [ { \"id\" : \"d4379195.7e131\" , \"type\" : \"subflow\" , \"name\" : \"get secret\" , \"info\" : \"\" , \"category\" : \"\" , \"in\" : [ { \"x\" : 40 , \"y\" : 40 , \"wires\" : [ { \"id\" : \"358bbb81.f1b0c4\" } ] } ], \"out\" : [ { \"x\" : 1020 , \"y\" : 40 , \"wires\" : [ { \"id\" : \"358bbb81.f1b0c4\" , \"port\" : 0 }, { \"id\" : \"cb9383d4.07e1a\" , \"port\" : 0 }, { \"id\" : \"cb9383d4.07e1a\" , \"port\" : 1 } ] } ], \"env\" : [ { \"name\" : \"secret_id\" , \"type\" : \"str\" , \"value\" : \"\" , \"ui\" : { \"icon\" : \"font-awesome/fa-lock\" , \"type\" : \"input\" , \"opts\" : { \"types\" : [ \"str\" ] } } } ], \"color\" : \"#3FADB5\" , \"icon\" : \"font-awesome/fa-lock\" }, { \"id\" : \"cbb350e7.54a96\" , \"type\" : \"file in\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"secrets\" , \"filename\" : \"/config/secrets.yaml\" , \"format\" : \"utf8\" , \"chunk\" : false , \"sendError\" : false , \"encoding\" : \"none\" , \"x\" : 380 , \"y\" : 80 , \"wires\" : [ [ \"168da1d3.7b3ace\" ] ] }, { \"id\" : \"168da1d3.7b3ace\" , \"type\" : \"yaml\" , \"z\" : \"d4379195.7e131\" , \"property\" : \"payload\" , \"name\" : \"\" , \"x\" : 510 , \"y\" : 80 , \"wires\" : [ [ \"cd100a20.901b08\" ] ] }, { \"id\" : \"cd100a20.901b08\" , \"type\" : \"function\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"save secrets in memory\" , \"func\" : \"for (let [key, value] of Object.entries(msg.payload)) { \\n flow.set(key,value); \\n } \\n return msg;\" , \"outputs\" : 1 , \"noerr\" : 0 , \"initialize\" : \"\" , \"finalize\" : \"\" , \"x\" : 690 , \"y\" : 80 , \"wires\" : [ [ \"cb9383d4.07e1a\" ] ] }, { \"id\" : \"358bbb81.f1b0c4\" , \"type\" : \"function\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"get already loaded secret\" , \"func\" : \"msg.secret_id = env.get( \\\" secret_id \\\" ); \\n msg.secret = flow.get(msg.secret_id); \\n\\n if (msg.secret !== undefined && msg.secret !== null) { \\n return [ msg, null ]; \\n } else { \\n msg.payload_backup = msg.payload; \\n return [ null, msg ]; \\n }\" , \"outputs\" : 2 , \"noerr\" : 0 , \"initialize\" : \"\" , \"finalize\" : \"\" , \"x\" : 190 , \"y\" : 40 , \"wires\" : [ [], [ \"cbb350e7.54a96\" ] ], \"outputLabels\" : [ \"secret was loaded\" , \"secret is not loaded yet\" ] }, { \"id\" : \"cb9383d4.07e1a\" , \"type\" : \"function\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"export secret\" , \"func\" : \"msg.secret = flow.get(msg.secret_id); \\n msg.payload = msg.payload_backup; \\n delete msg.payload_backup; \\n delete msg.filename; \\n\\n if (msg.secret !== undefined && msg.secret !== null) { \\n return [ msg, null ]; \\n } else { \\n msg.error = \\\" SECRET DOES NOT EXIST! \\\"\\n return [ null, msg ]; \\n }\" , \"outputs\" : 2 , \"noerr\" : 0 , \"initialize\" : \"\" , \"finalize\" : \"\" , \"x\" : 890 , \"y\" : 80 , \"wires\" : [ [], [ \"9020c683.c61c98\" ] ], \"outputLabels\" : [ \"secret was loaded\" , \"secret does not exist\" ] }, { \"id\" : \"9020c683.c61c98\" , \"type\" : \"debug\" , \"z\" : \"d4379195.7e131\" , \"name\" : \"log error\" , \"active\" : true , \"tosidebar\" : true , \"console\" : false , \"tostatus\" : false , \"complete\" : \"true\" , \"targetType\" : \"full\" , \"statusVal\" : \"\" , \"statusType\" : \"auto\" , \"x\" : 1060 , \"y\" : 100 , \"wires\" : [] }, { \"id\" : \"e8afbb97.2bf848\" , \"type\" : \"subflow:d4379195.7e131\" , \"z\" : \"84cddc8f.78464\" , \"name\" : \"\" , \"x\" : 450 , \"y\" : 900 , \"wires\" : [ [] ] } ]","title":"Home Assistant Secrets"},{"location":"hardware/","text":"Hardware \u00b6 These are all the smart devices I'm currently using. They're grouped into rough categories which you can see on the left. Below you can see a simplified diagram of how everything works together. The differently colored lines signify different modes of communication, such as wifi, ethernet, ZigBee and so on.","title":"Overview"},{"location":"hardware/#hardware","text":"These are all the smart devices I'm currently using. They're grouped into rough categories which you can see on the left. Below you can see a simplified diagram of how everything works together. The differently colored lines signify different modes of communication, such as wifi, ethernet, ZigBee and so on.","title":"Hardware"},{"location":"hardware/blinds/","text":"KNX Controller 9x Aktor MGX-9 \u00b6 The KNX blinds controller is pre-installed in the apartment. One thing I learned about KNX is that you can't download an existing configuration of a controller. You can just overwrite it. This has led to some issues where the building couldn't control the blinds anymore once I wrote my own configuration onto the controller. Luckily I was able to get the source files for the original configuration from a technician and add my own KNX addresses to it. So now the building can still lock my blinds for maintenance or high winds but I can also control them via Home Assistant. KNX devices are configured with ETS which is available for free for personal use (up to 5 devices). KNX IP Interface 731 \u00b6 This device is a interface between the KNX TP (twisted pair) and ethernet. It allows Home Assistant to communicate with the KNX controller controlling the blinds in my apartment. It fits in a DIN-bracket and draws power directly from the KNX bus.","title":"Blinds"},{"location":"hardware/blinds/#knx-controller-9x-aktor-mgx-9","text":"The KNX blinds controller is pre-installed in the apartment. One thing I learned about KNX is that you can't download an existing configuration of a controller. You can just overwrite it. This has led to some issues where the building couldn't control the blinds anymore once I wrote my own configuration onto the controller. Luckily I was able to get the source files for the original configuration from a technician and add my own KNX addresses to it. So now the building can still lock my blinds for maintenance or high winds but I can also control them via Home Assistant. KNX devices are configured with ETS which is available for free for personal use (up to 5 devices).","title":"KNX Controller 9x Aktor MGX-9"},{"location":"hardware/blinds/#knx-ip-interface-731","text":"This device is a interface between the KNX TP (twisted pair) and ethernet. It allows Home Assistant to communicate with the KNX controller controlling the blinds in my apartment. It fits in a DIN-bracket and draws power directly from the KNX bus.","title":"KNX IP Interface 731"},{"location":"hardware/computers/","text":"Intel NUC Baby Canyon NUC7i3BNH \u00b6 The brains of my whole Smart Home setup. It's sporting a Intel i3-7100U dual core CPU clocking 2.4 GHz, 2x 8GB DDR-4 Ram and a WD Blue 1TB M.2 SSD. As for software it's running Proxmox , a virtualization platform. Inside of Proxmox I've deployed Home Assistant OS as a virtual appliance. Raspberry PI Zero \u00b6 Just a Raspberry Pi Zero running a headless Raspbian image. I use it as a BLE to MQTT gateway for the Xiaomi Flower Care sensors in my loggia. When triggered it will poll all the Flower Care sensors and forward their values over MQTT.","title":"Computers"},{"location":"hardware/computers/#intel-nuc-baby-canyon-nuc7i3bnh","text":"The brains of my whole Smart Home setup. It's sporting a Intel i3-7100U dual core CPU clocking 2.4 GHz, 2x 8GB DDR-4 Ram and a WD Blue 1TB M.2 SSD. As for software it's running Proxmox , a virtualization platform. Inside of Proxmox I've deployed Home Assistant OS as a virtual appliance.","title":"Intel NUC Baby Canyon NUC7i3BNH"},{"location":"hardware/computers/#raspberry-pi-zero","text":"Just a Raspberry Pi Zero running a headless Raspbian image. I use it as a BLE to MQTT gateway for the Xiaomi Flower Care sensors in my loggia. When triggered it will poll all the Flower Care sensors and forward their values over MQTT.","title":"Raspberry PI Zero"},{"location":"hardware/entertainment/","text":"Samsung QE65Q7F \u00b6 A smart tv. It connects to the internet over Ethernet or WiFi. It has some Web APIs but they're quite restricted and not fully finished.. e.g. you can switch between tv mode and the first hdmi source but not others.. so I've ended up automating it over IR commands sent via a Logitech Harmony Hub. Other then the bad API it's a good tv. It has apps for all the major streaming providers and it can also play 4k video from a computer or network share. Sony PS4 Pro \u00b6 A game console. It can be controlled by Home Assistant via ethernet/WiFi. Apple TV 4K 32GB \u00b6 I originally bought this as a way to expose Apple Homekit for remote access. However I've since stopped using Homekit almost entirely. It's still useful for casting photos & videos from an iOS device and to watch IPTV from Init7. Nvidia Shield TV \u00b6 I originally bought this because I thought Android TV was cool. I rarely use it. It serves as a Chromecast occasionally.. but that's really all there is to it.","title":"TV & Entertainment"},{"location":"hardware/entertainment/#samsung-qe65q7f","text":"A smart tv. It connects to the internet over Ethernet or WiFi. It has some Web APIs but they're quite restricted and not fully finished.. e.g. you can switch between tv mode and the first hdmi source but not others.. so I've ended up automating it over IR commands sent via a Logitech Harmony Hub. Other then the bad API it's a good tv. It has apps for all the major streaming providers and it can also play 4k video from a computer or network share.","title":"Samsung QE65Q7F"},{"location":"hardware/entertainment/#sony-ps4-pro","text":"A game console. It can be controlled by Home Assistant via ethernet/WiFi.","title":"Sony PS4 Pro"},{"location":"hardware/entertainment/#apple-tv-4k-32gb","text":"I originally bought this as a way to expose Apple Homekit for remote access. However I've since stopped using Homekit almost entirely. It's still useful for casting photos & videos from an iOS device and to watch IPTV from Init7.","title":"Apple TV 4K 32GB"},{"location":"hardware/entertainment/#nvidia-shield-tv","text":"I originally bought this because I thought Android TV was cool. I rarely use it. It serves as a Chromecast occasionally.. but that's really all there is to it.","title":"Nvidia Shield TV"},{"location":"hardware/lights/","text":"Philips Hue \u00b6 I use mostly Philips Hue light bulbs. They work well and are easily paired. Philips Hue Filament BT Philips Hue GU10 Spot Color BT Philips Hue E26 Color Nanoleaf Aurora \u00b6 A smart light consisting of triangle shaped LED panels. The panels can be arranged in any pattern desired. It can also be animated with or without music. The Nanoleaf connects to Home Assistant over WiFi.","title":"Lights"},{"location":"hardware/lights/#philips-hue","text":"I use mostly Philips Hue light bulbs. They work well and are easily paired. Philips Hue Filament BT Philips Hue GU10 Spot Color BT Philips Hue E26 Color","title":"Philips Hue"},{"location":"hardware/lights/#nanoleaf-aurora","text":"A smart light consisting of triangle shaped LED panels. The panels can be arranged in any pattern desired. It can also be animated with or without music. The Nanoleaf connects to Home Assistant over WiFi.","title":"Nanoleaf Aurora"},{"location":"hardware/locks/","text":"Nello One \u00b6 The Nello One is a interesting device. It's installed as a middle man between the buildings intercom/door opener system. It allows me to open the apartment buildings main door from my phone instead of with a key. The way it does this is by emulating a button press (door open) on the intercom device.","title":"Locks"},{"location":"hardware/locks/#nello-one","text":"The Nello One is a interesting device. It's installed as a middle man between the buildings intercom/door opener system. It allows me to open the apartment buildings main door from my phone instead of with a key. The way it does this is by emulating a button press (door open) on the intercom device.","title":"Nello One"},{"location":"hardware/miscellaneous/","text":"Kibernetik Air Conditioner \u00b6 A simple AC device. Can be controlled over infrared. I use the Logitech Harmony Hub to do this. iRobot Roomba 980 \u00b6 Smart vacuum robot that communicates over WiFi. It's actually running Linux and you can connect to it over SSH. I'm happy with it's cleaning capabilities. The vacuum is started from a schedule in Home Assistant but only when Home Assistant sees that I'm not home. Oral-B Elektro Genius 10100S \u00b6 Smart toothbrush that communicates over BLE. I haven't integrated this yet.. but it's on the list ;-)","title":"Miscellaneous"},{"location":"hardware/miscellaneous/#kibernetik-air-conditioner","text":"A simple AC device. Can be controlled over infrared. I use the Logitech Harmony Hub to do this.","title":"Kibernetik Air Conditioner"},{"location":"hardware/miscellaneous/#irobot-roomba-980","text":"Smart vacuum robot that communicates over WiFi. It's actually running Linux and you can connect to it over SSH. I'm happy with it's cleaning capabilities. The vacuum is started from a schedule in Home Assistant but only when Home Assistant sees that I'm not home.","title":"iRobot Roomba 980"},{"location":"hardware/miscellaneous/#oral-b-elektro-genius-10100s","text":"Smart toothbrush that communicates over BLE. I haven't integrated this yet.. but it's on the list ;-)","title":"Oral-B Elektro Genius 10100S"},{"location":"hardware/networking/","text":"ZigBee \u00b6 Dresden Elektronik ConBee Stick \u00b6 I use a Dresden Elektronik ConBee stick as ZigBee gateway for all of my ZigBee devices. The ConBee is a USB stick that's plugged directly into the Intel NUC running Home Assistant. In Home Assistant I'm using the deCONZ addon for adding and configuring ZigBee devices. The main advantage of using a ConBee instead of e.g. the Philips Hue hub is that you can unite devices of different vendors in a single Zigbee mesh. This is important because it grows a single large network instead of multiple small ones. Especially small sensors that are powered by button cells profit enormously from having access to close-by mains powered device such as a hue light. The ConBee stick works entirely locally and does not need a cloud service of it's vendor. This makes it more robust against outages and you don't have to worry as much about an additional attack vector or privacy. This is really a good product that I can recommend without hesitation. You can find more details on it's manufacturer website . Infrared \u00b6 Logitech Harmony Hub \u00b6 Logitech Harmony Hub is a infrared broadcast device that is accessed over wifi. It can be directly integrated into Home Assistant. From Home Assistant infrared codes can be sent to control various devices. In my setup I use it to control the TV, speakers and in summer the AC machine. WiFi & Ethernet \u00b6 FRITZ!Box 5490 \u00b6 I'm using the Fritz!Box 5490 as router and DHCP server. This is the fiber version. It works well and it's easy to configure & manage static IPs which is something you have to do often in a well organized Smart Home setup. I'm not using the wifi-router functionality because it's not located ideally for spreading the wifi signal. I'm also not using any of Fritz!'s smart home features. Google Nest Wifi \u00b6 I use a single Google Nest Wifi as my access point. It provides fast wireless access at gigabit speeds and has various optimizations for multi-device access as well as future compatibility to BLE and Thread for smart home device integrations. Additionally it looks nice and can be placed openly which improves the spread of the wifi signal as well. I run my Nest Wifi in bridge mode, which means it's DHCP server functionality is disabled and it simply extends my LAN over wifi. Warning Beware that Google Nest Wifi does not support mesh networking in bridge mode. So if you're using a Fritz!Box or similar router for managing statics IPs you cannot run a Google Nest Wifi mesh network. This is a bit of a downside, so I would not recommend using this wifi router if you're planning to run a mesh network.","title":"Networking & Mesh"},{"location":"hardware/networking/#zigbee","text":"","title":"ZigBee"},{"location":"hardware/networking/#dresden-elektronik-conbee-stick","text":"I use a Dresden Elektronik ConBee stick as ZigBee gateway for all of my ZigBee devices. The ConBee is a USB stick that's plugged directly into the Intel NUC running Home Assistant. In Home Assistant I'm using the deCONZ addon for adding and configuring ZigBee devices. The main advantage of using a ConBee instead of e.g. the Philips Hue hub is that you can unite devices of different vendors in a single Zigbee mesh. This is important because it grows a single large network instead of multiple small ones. Especially small sensors that are powered by button cells profit enormously from having access to close-by mains powered device such as a hue light. The ConBee stick works entirely locally and does not need a cloud service of it's vendor. This makes it more robust against outages and you don't have to worry as much about an additional attack vector or privacy. This is really a good product that I can recommend without hesitation. You can find more details on it's manufacturer website .","title":"Dresden Elektronik ConBee Stick"},{"location":"hardware/networking/#infrared","text":"","title":"Infrared"},{"location":"hardware/networking/#logitech-harmony-hub","text":"Logitech Harmony Hub is a infrared broadcast device that is accessed over wifi. It can be directly integrated into Home Assistant. From Home Assistant infrared codes can be sent to control various devices. In my setup I use it to control the TV, speakers and in summer the AC machine.","title":"Logitech Harmony Hub"},{"location":"hardware/networking/#wifi-ethernet","text":"","title":"WiFi &amp; Ethernet"},{"location":"hardware/networking/#fritzbox-5490","text":"I'm using the Fritz!Box 5490 as router and DHCP server. This is the fiber version. It works well and it's easy to configure & manage static IPs which is something you have to do often in a well organized Smart Home setup. I'm not using the wifi-router functionality because it's not located ideally for spreading the wifi signal. I'm also not using any of Fritz!'s smart home features.","title":"FRITZ!Box 5490"},{"location":"hardware/networking/#google-nest-wifi","text":"I use a single Google Nest Wifi as my access point. It provides fast wireless access at gigabit speeds and has various optimizations for multi-device access as well as future compatibility to BLE and Thread for smart home device integrations. Additionally it looks nice and can be placed openly which improves the spread of the wifi signal as well. I run my Nest Wifi in bridge mode, which means it's DHCP server functionality is disabled and it simply extends my LAN over wifi. Warning Beware that Google Nest Wifi does not support mesh networking in bridge mode. So if you're using a Fritz!Box or similar router for managing statics IPs you cannot run a Google Nest Wifi mesh network. This is a bit of a downside, so I would not recommend using this wifi router if you're planning to run a mesh network.","title":"Google Nest Wifi"},{"location":"hardware/nfc/","text":"Home Assistant Tag Reader \u00b6 I'm using a Home Assistant Tag reader to read various NFC tags. For example I have NFC cards for various light scenes that aren't used that frequently (e.g. party scene). I also plan on using this for Spotify playlists and other things that aren't so easily exposed in the physical world.","title":"NFC"},{"location":"hardware/nfc/#home-assistant-tag-reader","text":"I'm using a Home Assistant Tag reader to read various NFC tags. For example I have NFC cards for various light scenes that aren't used that frequently (e.g. party scene). I also plan on using this for Spotify playlists and other things that aren't so easily exposed in the physical world.","title":"Home Assistant Tag Reader"},{"location":"hardware/power-switches/","text":"Shelly \u00b6 Shelly's are tiny power switches that I've placed behind the actual light switches of my apartment. I mainly use them to detach the event of clicking a light-switch and turning the power of the light bulbs on/off. Since I use smart light bulbs (Philips Hue), the light bulbs need to be powered on all the time, otherwise they can't be controlled via Home Assistant, Google Home etc. This is where the Shellys come in real handy. They connect to Home Assistant via MQTT over WiFi and they can be configured in a way that pressing the actual light switch will simply send an MQTT event but not actually turn of the power of the light bulbs. Home Assistant can then decide what to do with the button press event. In some cases I turn on/off the lights, but in other cases I've re-used the light switch to do other things. Such as change light scene or turn on the radio. Shelly 1PM \u00b6 This shelly switches on power line / button. It also measure the power consumed. Shelly 2.5 \u00b6 This shelly switches two power lines / buttons. It also measures the power consumed. It could also be used to control electric blinds, but I don't use it for that. MyStrom Switch \u00b6 I have a bunch of MyStrom smart switches connected to all sorts of devices. I use them to control the connected devices, but also for automations. For example I use two of them to measure the power consumption of the washer & dryer. That data is then used to send a notification when the washer or dryer has finished and it's time to take out the clothes.","title":"Power Switches"},{"location":"hardware/power-switches/#shelly","text":"Shelly's are tiny power switches that I've placed behind the actual light switches of my apartment. I mainly use them to detach the event of clicking a light-switch and turning the power of the light bulbs on/off. Since I use smart light bulbs (Philips Hue), the light bulbs need to be powered on all the time, otherwise they can't be controlled via Home Assistant, Google Home etc. This is where the Shellys come in real handy. They connect to Home Assistant via MQTT over WiFi and they can be configured in a way that pressing the actual light switch will simply send an MQTT event but not actually turn of the power of the light bulbs. Home Assistant can then decide what to do with the button press event. In some cases I turn on/off the lights, but in other cases I've re-used the light switch to do other things. Such as change light scene or turn on the radio.","title":"Shelly"},{"location":"hardware/power-switches/#shelly-1pm","text":"This shelly switches on power line / button. It also measure the power consumed.","title":"Shelly 1PM"},{"location":"hardware/power-switches/#shelly-25","text":"This shelly switches two power lines / buttons. It also measures the power consumed. It could also be used to control electric blinds, but I don't use it for that.","title":"Shelly 2.5"},{"location":"hardware/power-switches/#mystrom-switch","text":"I have a bunch of MyStrom smart switches connected to all sorts of devices. I use them to control the connected devices, but also for automations. For example I use two of them to measure the power consumption of the washer & dryer. That data is then used to send a notification when the washer or dryer has finished and it's time to take out the clothes.","title":"MyStrom Switch"},{"location":"hardware/sensors/","text":"In my setup I use mostly Zigbee sensors because they're power-efficient and fairly cheap to purchase. Since they're not directly connected to the internet there's also less of an attack angle and you don't need to worry about privacy. Zigbee \u00b6 These sensors communicate over the Zigbee protocol. Zigbee uses a 2.4GHz band that's similar to Wifi. It's main advantage is however that it forms a mesh network. So a tiny sensor running on a button cell doesn't have to connect at a central hub but rather uses the nearest mains powered device to repeat its signal. Since most of my lamps are also controlled over Zigbee I have a fairly extensive Zigbee mesh and these sensors never need to broadcast very far. In general the button cell of most of my sensors seems to last between 1-2years before needing to be replaced. To connect the Zigbee mesh to Home Assistant I use a Dresden Electronik ConBee USB stick and the deCONZ Home Assistant addon. Aqara Door Sensor \u00b6 This sensors consists of itself and a little magnet that's attached to a door or window. It sends a state update when it's opened or closed. I use these sensors to trigger automations when the apartment door is opened as well as for general state monitoring. Aqara Temperature & Humidity Sensor \u00b6 This sensors reports various air quality metrics such as temperature, humidity and pressure. I have a ton of those placed in various spots around my apartment. Notable locations are inside the air ventilation system, fridge, bedroom and outside the window. They're so small that they can fit anywhere. I use these for air quality monitoring as well as to provide information to Google Home so I can ask it how warm it is. Aqara Motion Sensor \u00b6 The motion sensors uses infrared to detect movement in a 170\u00b0 field with a range of 7 meters. I use these to detect motion in the kitchen, bathroom, bedroom corridor and trigger relevant automations.. mostly turning on lights. E.g. after the alarm clock goes off in the morning there's a 15min window in which the corridor sensor will turn on lights in the bathroom and kitchen areas. Aqara Vibration Sensor \u00b6 This sensor detects vibrations, tilt and drops. It can for example be used to detect when a chair is moved or a machine is started. It could also be used instead of a regular door sensor to detect when a door or window is opened. The downside of using it for this is that it doesn't know an opened or closed state, therefor it's really only useful if you want it alert you or trigger another kind of automation. In the past I've used it to turn on the lights when a chair was moved. Bluetooth Low Energy \u00b6 Xiaomi Flower Care \u00b6 This sensor reports soil moisture, temperature, nutrition/fertilizer, temperature and light. It communicated over BLE and can be integrated directly in Home Assistant. However due to the limited range of BLE it can't reach my Home Assistant computer from my loggia where I keep most of my plants. Therefor I've set up a small Raspberry Pi Zero that collects the metrics from these sensors over BLE and then forwards them over MQTT (Wifi) to Home Assistant. A similar metrics collector could also be built with a ESP32 instead of a raspberry. These sensors aren't super cheap, but they're a great way to quickly know what's wrong with a plant, e.g. low on fertilizer or too much water. Wifi \u00b6 I also have a few wifi sensors. These sensors have the downside that you need to trust their respective manufacturer that they're secure and that their cloud services respect security and privacy standards. It's always advisable to use wifi devices that allow local access and don't require a cloud service to run.. sadly sometimes it's no possible to find such a product. Withings Sleep \u00b6 This sensor is placed below the mattress and detects sleep cycles (deep, light, REM), heartbeats as well as snoring & sleeping disturbances. It has an Apple Health integration and reports it's metrics over Wifi. It does not offer any local access, all data is stored in the Withings Cloud and later downloaded to Apple Health. Apart from it's use for health monitoring I use it to turn off all the lights when it detects that the bed is occupied. Netatmo Weatherstation \u00b6 This was one of the first devices I bought for my smart home. It consists of a indoor and outdoor weather station. Sadly the outdoor one has died after a few years.. but the indoor one is still going strong. Apart from the temperature it also reports the Carbon Dioxide levels which none of my other sensors do. This sensors also does not offer local access. All data is stored in the Netatmo cloud. It can be integrated into Home Assistant with cloud polling.","title":"Sensors"},{"location":"hardware/sensors/#zigbee","text":"These sensors communicate over the Zigbee protocol. Zigbee uses a 2.4GHz band that's similar to Wifi. It's main advantage is however that it forms a mesh network. So a tiny sensor running on a button cell doesn't have to connect at a central hub but rather uses the nearest mains powered device to repeat its signal. Since most of my lamps are also controlled over Zigbee I have a fairly extensive Zigbee mesh and these sensors never need to broadcast very far. In general the button cell of most of my sensors seems to last between 1-2years before needing to be replaced. To connect the Zigbee mesh to Home Assistant I use a Dresden Electronik ConBee USB stick and the deCONZ Home Assistant addon.","title":"Zigbee"},{"location":"hardware/sensors/#aqara-door-sensor","text":"This sensors consists of itself and a little magnet that's attached to a door or window. It sends a state update when it's opened or closed. I use these sensors to trigger automations when the apartment door is opened as well as for general state monitoring.","title":"Aqara Door Sensor"},{"location":"hardware/sensors/#aqara-temperature-humidity-sensor","text":"This sensors reports various air quality metrics such as temperature, humidity and pressure. I have a ton of those placed in various spots around my apartment. Notable locations are inside the air ventilation system, fridge, bedroom and outside the window. They're so small that they can fit anywhere. I use these for air quality monitoring as well as to provide information to Google Home so I can ask it how warm it is.","title":"Aqara Temperature &amp; Humidity Sensor"},{"location":"hardware/sensors/#aqara-motion-sensor","text":"The motion sensors uses infrared to detect movement in a 170\u00b0 field with a range of 7 meters. I use these to detect motion in the kitchen, bathroom, bedroom corridor and trigger relevant automations.. mostly turning on lights. E.g. after the alarm clock goes off in the morning there's a 15min window in which the corridor sensor will turn on lights in the bathroom and kitchen areas.","title":"Aqara Motion Sensor"},{"location":"hardware/sensors/#aqara-vibration-sensor","text":"This sensor detects vibrations, tilt and drops. It can for example be used to detect when a chair is moved or a machine is started. It could also be used instead of a regular door sensor to detect when a door or window is opened. The downside of using it for this is that it doesn't know an opened or closed state, therefor it's really only useful if you want it alert you or trigger another kind of automation. In the past I've used it to turn on the lights when a chair was moved.","title":"Aqara Vibration Sensor"},{"location":"hardware/sensors/#bluetooth-low-energy","text":"","title":"Bluetooth Low Energy"},{"location":"hardware/sensors/#xiaomi-flower-care","text":"This sensor reports soil moisture, temperature, nutrition/fertilizer, temperature and light. It communicated over BLE and can be integrated directly in Home Assistant. However due to the limited range of BLE it can't reach my Home Assistant computer from my loggia where I keep most of my plants. Therefor I've set up a small Raspberry Pi Zero that collects the metrics from these sensors over BLE and then forwards them over MQTT (Wifi) to Home Assistant. A similar metrics collector could also be built with a ESP32 instead of a raspberry. These sensors aren't super cheap, but they're a great way to quickly know what's wrong with a plant, e.g. low on fertilizer or too much water.","title":"Xiaomi Flower Care"},{"location":"hardware/sensors/#wifi","text":"I also have a few wifi sensors. These sensors have the downside that you need to trust their respective manufacturer that they're secure and that their cloud services respect security and privacy standards. It's always advisable to use wifi devices that allow local access and don't require a cloud service to run.. sadly sometimes it's no possible to find such a product.","title":"Wifi"},{"location":"hardware/sensors/#withings-sleep","text":"This sensor is placed below the mattress and detects sleep cycles (deep, light, REM), heartbeats as well as snoring & sleeping disturbances. It has an Apple Health integration and reports it's metrics over Wifi. It does not offer any local access, all data is stored in the Withings Cloud and later downloaded to Apple Health. Apart from it's use for health monitoring I use it to turn off all the lights when it detects that the bed is occupied.","title":"Withings Sleep"},{"location":"hardware/sensors/#netatmo-weatherstation","text":"This was one of the first devices I bought for my smart home. It consists of a indoor and outdoor weather station. Sadly the outdoor one has died after a few years.. but the indoor one is still going strong. Apart from the temperature it also reports the Carbon Dioxide levels which none of my other sensors do. This sensors also does not offer local access. All data is stored in the Netatmo cloud. It can be integrated into Home Assistant with cloud polling.","title":"Netatmo Weatherstation"},{"location":"hardware/voice-assistants/","text":"Google Home \u00b6 I use Google Home to have voice controls for all my devices and as a digital assistant. Devices relevant for voice controls are exposed to Google Assistant via the Nabu Casa integration. In my apartment I've deployed 5 Google Home devices to reach 100% coverage of voice recognition in all rooms. In addition to voice control they also serve as smart speakers for playing music or notifications. Some of the commands I use most often: Okay Google ... [ open /close] the blinds turn [ all /the bedroom/the living room] lights [ on /off] play [ music /radio] [ ... /on everywhere] add [item] to the shopping list what's the temperature [ inside /outside]? turn off the tv Device Description Count Google Home The original Google Home. Has pretty good sound quality from multiple speakers. I have one placed near the computer desk and I use it to listen to music. 1 Google Home Mini This a small version of a Google Home, it has only one speaker. I have one in the bathroom, bedroom and loggia. They're decent enough to listen to music ocasionally. 3 Google Nest Hub This one is also a smart display. It can show receipts, timers, maps, youtube videos and more. I have one in the kitchen, it's ideal for cooking. Also nice to see the weather forecast for the whole week. It has a touch screen but I operate it only by voice 95% of the time. 1","title":"Voice Assistants"},{"location":"hardware/voice-assistants/#google-home","text":"I use Google Home to have voice controls for all my devices and as a digital assistant. Devices relevant for voice controls are exposed to Google Assistant via the Nabu Casa integration. In my apartment I've deployed 5 Google Home devices to reach 100% coverage of voice recognition in all rooms. In addition to voice control they also serve as smart speakers for playing music or notifications. Some of the commands I use most often: Okay Google ... [ open /close] the blinds turn [ all /the bedroom/the living room] lights [ on /off] play [ music /radio] [ ... /on everywhere] add [item] to the shopping list what's the temperature [ inside /outside]? turn off the tv Device Description Count Google Home The original Google Home. Has pretty good sound quality from multiple speakers. I have one placed near the computer desk and I use it to listen to music. 1 Google Home Mini This a small version of a Google Home, it has only one speaker. I have one in the bathroom, bedroom and loggia. They're decent enough to listen to music ocasionally. 3 Google Nest Hub This one is also a smart display. It can show receipts, timers, maps, youtube videos and more. I have one in the kitchen, it's ideal for cooking. Also nice to see the weather forecast for the whole week. It has a touch screen but I operate it only by voice 95% of the time. 1","title":"Google Home"},{"location":"software/home-assistant/","text":"Home Assistant is the brains of the whole operation. It controls all my smart devices and it provides a bit of an integration layer to connect everything to the Google Home and Apple Homekit ecosystems. Configuration \u00b6 Home Assistant is configured over its UI and a set of .yaml configuration files. Most of my configuration is checked in here . The entry point of the configuration is the configuration.yaml file at the root of the repository. To keep the configuration easier to maintain and read I've split off several sub configurations. You can recognize those by the !include example.yaml instructions in the main configuration.yaml. Passwords, auth tokens and other secrets are stored in a secrets.yaml file that is not checked in. You can recognize those by the !secret id instructions in the configuration. Screens \u00b6 Overview \u00b6 This screen I use 90% of the time. Most devices are controllable from the mini map \"Apartment Status\". Lights and basic devices will just turn on/off when clicked, other devices such as the blinds open a modal window to change detailed settings. I've also started setting up quick action buttons (below the minimap) to trigger my most used light scenes, music or the vacuum robot. Media Remote Control \u00b6 The remote control screen is used to control the TV and multi-room audio setup. The TV is controlled over a Logitech Harmony IR blaster and some undocumented REST APIs. The audio system is controlled via Chromecast/Google Home . Z\u00fcri Webcams \u00b6 Some public webcams in various places around Zurich. I quite like this screen as it gives me a quick overview of what's happening in the city. Living Room \u00b6 I rarely use the individual room screens, mostly just if a device is misbehaving. Loggia \u00b6 Bedroom \u00b6 Bathroom \u00b6 Tech & Analytics \u00b6 This screen has been a bit neglected for a while. Ultimately it should display warnings if the battery of sensors goes below a certain threshold and other monitoring things like that. Addons \u00b6 Home Assistant can be extended with addons. I'm currently using the following: Name Description Repo AirCast Creates virtual AirPlay devices for Chromecast devices Community Add-on Duck DNS Automatically update your Duck DNS IP address with integrated HTTPS support via Let's Encrypt. Official Add-on Glances Shows CPU, RAM etc. usage Community Add-on MariaDB An SQL database server. Used as a replacement for the default SQLite DB. Official Add-on Mosquitto broker An Open Source MQTT broker. Used to connect to devices over MQTT. Official Add-on Node-RED Flow-based programming for the Internet of Things. Used for all sorts of automations Community Add-on Portainer Portainer is an open-source lightweight management UI which allows you to easily manage a Docker host(s) or Docker swarm clusters. Community Add-on Visual Studio Code This add-on runs Visual Studio Code, allowing you to edit your Home Assistant configuration directly from your web browser. Community Add-on deCONZ Control a Zigbee network using ConBee or RaspBee hardware by Dresden Elektronik. Official Add-on Home Assistant Google Drive Backup Creates regular backups of Home Assistant & Addons and uploads them to Google Drive. It uses the regular Home Assistant snapshot functionality and snapshots can be encrypted if you don't trust Google. Third-Party Add-on Influx A time-series database. I use it to store long-term data that I want to keep. E.g. various fitness metrics, account balances etc. Community Add-on Grafana An analytics and visualization platform. I used it to visualize long-term data that I store in InfluxDB. Community Add-on","title":"Home Assistant"},{"location":"software/home-assistant/#configuration","text":"Home Assistant is configured over its UI and a set of .yaml configuration files. Most of my configuration is checked in here . The entry point of the configuration is the configuration.yaml file at the root of the repository. To keep the configuration easier to maintain and read I've split off several sub configurations. You can recognize those by the !include example.yaml instructions in the main configuration.yaml. Passwords, auth tokens and other secrets are stored in a secrets.yaml file that is not checked in. You can recognize those by the !secret id instructions in the configuration.","title":"Configuration"},{"location":"software/home-assistant/#screens","text":"","title":"Screens"},{"location":"software/home-assistant/#overview","text":"This screen I use 90% of the time. Most devices are controllable from the mini map \"Apartment Status\". Lights and basic devices will just turn on/off when clicked, other devices such as the blinds open a modal window to change detailed settings. I've also started setting up quick action buttons (below the minimap) to trigger my most used light scenes, music or the vacuum robot.","title":"Overview"},{"location":"software/home-assistant/#media-remote-control","text":"The remote control screen is used to control the TV and multi-room audio setup. The TV is controlled over a Logitech Harmony IR blaster and some undocumented REST APIs. The audio system is controlled via Chromecast/Google Home .","title":"Media Remote Control"},{"location":"software/home-assistant/#zuri-webcams","text":"Some public webcams in various places around Zurich. I quite like this screen as it gives me a quick overview of what's happening in the city.","title":"Z\u00fcri Webcams"},{"location":"software/home-assistant/#living-room","text":"I rarely use the individual room screens, mostly just if a device is misbehaving.","title":"Living Room"},{"location":"software/home-assistant/#loggia","text":"","title":"Loggia"},{"location":"software/home-assistant/#bedroom","text":"","title":"Bedroom"},{"location":"software/home-assistant/#bathroom","text":"","title":"Bathroom"},{"location":"software/home-assistant/#tech-analytics","text":"This screen has been a bit neglected for a while. Ultimately it should display warnings if the battery of sensors goes below a certain threshold and other monitoring things like that.","title":"Tech &amp; Analytics"},{"location":"software/home-assistant/#addons","text":"Home Assistant can be extended with addons. I'm currently using the following: Name Description Repo AirCast Creates virtual AirPlay devices for Chromecast devices Community Add-on Duck DNS Automatically update your Duck DNS IP address with integrated HTTPS support via Let's Encrypt. Official Add-on Glances Shows CPU, RAM etc. usage Community Add-on MariaDB An SQL database server. Used as a replacement for the default SQLite DB. Official Add-on Mosquitto broker An Open Source MQTT broker. Used to connect to devices over MQTT. Official Add-on Node-RED Flow-based programming for the Internet of Things. Used for all sorts of automations Community Add-on Portainer Portainer is an open-source lightweight management UI which allows you to easily manage a Docker host(s) or Docker swarm clusters. Community Add-on Visual Studio Code This add-on runs Visual Studio Code, allowing you to edit your Home Assistant configuration directly from your web browser. Community Add-on deCONZ Control a Zigbee network using ConBee or RaspBee hardware by Dresden Elektronik. Official Add-on Home Assistant Google Drive Backup Creates regular backups of Home Assistant & Addons and uploads them to Google Drive. It uses the regular Home Assistant snapshot functionality and snapshots can be encrypted if you don't trust Google. Third-Party Add-on Influx A time-series database. I use it to store long-term data that I want to keep. E.g. various fitness metrics, account balances etc. Community Add-on Grafana An analytics and visualization platform. I used it to visualize long-term data that I store in InfluxDB. Community Add-on","title":"Addons"},{"location":"software/overview/","text":"Software \u00b6 This is a bit of a general overview over all the software I use. It's not strictly limited to only Smart Home stuff since it's hard to draw a clear line. Home Automation \u00b6 Home Assistant \u00b6 Home Assistant is the core of my smart home setup. It's an open source home automation software written in Python that runs locally on a computer as small as a Raspberry Pi or as powerful as the user desires. At the time of me writing this it supports over 1500 integrations with various smart home devices & services. It is actively developed and has a regular release cycle of 3 weeks. Updates are frequent and of good quality. I'm running my Home Assistant instance on a Intel NUC in supervised mode. This means I provide my own OS of choice (Ubuntu) and Home Assistant runs a supervisor software on top that manages the docker containers used by itself and addons. Node-RED \u00b6 Node-RED is a programming tool for wiring together hardware devices, APIs and online services. It provides a web-editor that makes it easy to wire together flows using a wide range of nodes. Changes can be deployed with a single-click. Node-RED was originally developed by IBM but has since been contributed to the open source JS Foundation project. I run Node-RED as a addon in Home Assistant and I use it to create & run a ton of simple and complicated automations. Some of my favorite automations are: only starting the cleaning robot when I'm not home, reminding me that the washing machine has finished with a push notification & google home announcement, and operating various lights fully automatically. Visual Studio Code \u00b6 Visual Studio Code is an awesome IDE in it's own right. However I also run it as a Home Assistant Addon in order to edit all those .yaml configuration files. What's especially cool is that it has a full integration with Home Assistant, so there's even autocompletion for all the device entities managed by Home Assistant. Documentation \u00b6 MkDocs \u00b6 This page is made with MkDocs . It's a static site generator that's geared towards building project documentation. The source files are written in Markdown and configured with a single .yaml configuration file. I host my smart home documentation on Github pages. SaaS \u00b6 Software as a service.. or cloud stuff that I use :) Exist \u00b6 Exist combines the data of various sources (Apple Health, RescueTime, Weather .. etc.) to help you understand what makes you more happy, productive, active etc. This data is already being collected by other entities.. so it's interesting to have it for yourself and draw your own conclusions. I've made some automations in home assistant to automatically log the time spent gaming or watching tv to Exist.io. 1Password \u00b6 The password manager of my choice. Apart from storing passwords it has a few features that I really like. It has a scanner that detects weak, vulnerable or duplicate passwords and allows you to easily change them. And it can store 2FA pins in addition to passwords. This is a lot better than with Google Authenticator where you'd need to reset all your 2FA pins every time you set up a new phone.","title":"Software"},{"location":"software/overview/#software","text":"This is a bit of a general overview over all the software I use. It's not strictly limited to only Smart Home stuff since it's hard to draw a clear line.","title":"Software"},{"location":"software/overview/#home-automation","text":"","title":"Home Automation"},{"location":"software/overview/#home-assistant","text":"Home Assistant is the core of my smart home setup. It's an open source home automation software written in Python that runs locally on a computer as small as a Raspberry Pi or as powerful as the user desires. At the time of me writing this it supports over 1500 integrations with various smart home devices & services. It is actively developed and has a regular release cycle of 3 weeks. Updates are frequent and of good quality. I'm running my Home Assistant instance on a Intel NUC in supervised mode. This means I provide my own OS of choice (Ubuntu) and Home Assistant runs a supervisor software on top that manages the docker containers used by itself and addons.","title":"Home Assistant"},{"location":"software/overview/#node-red","text":"Node-RED is a programming tool for wiring together hardware devices, APIs and online services. It provides a web-editor that makes it easy to wire together flows using a wide range of nodes. Changes can be deployed with a single-click. Node-RED was originally developed by IBM but has since been contributed to the open source JS Foundation project. I run Node-RED as a addon in Home Assistant and I use it to create & run a ton of simple and complicated automations. Some of my favorite automations are: only starting the cleaning robot when I'm not home, reminding me that the washing machine has finished with a push notification & google home announcement, and operating various lights fully automatically.","title":"Node-RED"},{"location":"software/overview/#visual-studio-code","text":"Visual Studio Code is an awesome IDE in it's own right. However I also run it as a Home Assistant Addon in order to edit all those .yaml configuration files. What's especially cool is that it has a full integration with Home Assistant, so there's even autocompletion for all the device entities managed by Home Assistant.","title":"Visual Studio Code"},{"location":"software/overview/#documentation","text":"","title":"Documentation"},{"location":"software/overview/#mkdocs","text":"This page is made with MkDocs . It's a static site generator that's geared towards building project documentation. The source files are written in Markdown and configured with a single .yaml configuration file. I host my smart home documentation on Github pages.","title":"MkDocs"},{"location":"software/overview/#saas","text":"Software as a service.. or cloud stuff that I use :)","title":"SaaS"},{"location":"software/overview/#exist","text":"Exist combines the data of various sources (Apple Health, RescueTime, Weather .. etc.) to help you understand what makes you more happy, productive, active etc. This data is already being collected by other entities.. so it's interesting to have it for yourself and draw your own conclusions. I've made some automations in home assistant to automatically log the time spent gaming or watching tv to Exist.io.","title":"Exist"},{"location":"software/overview/#1password","text":"The password manager of my choice. Apart from storing passwords it has a few features that I really like. It has a scanner that detects weak, vulnerable or duplicate passwords and allows you to easily change them. And it can store 2FA pins in addition to passwords. This is a lot better than with Google Authenticator where you'd need to reset all your 2FA pins every time you set up a new phone.","title":"1Password"},{"location":"software/knx/","text":"KNX Blinds Configuration \u00b6 The apartment that I'm renting has blinds that can be raised and lowered electronically. They're controlled over a \"Griesser MGX-9 Motorsteuerung\" (actor controller). The controller communicates with the buildings central control unit over KNX . KNX is an open standard for building automation. Some of the rules that cause the building to control the blinds are: Direct sunlight on the side of the building at specific times (e.g. 8am, 9am) cause it to lower the blinds Strong winds cause it to raise the blinds and lock them for some time (idk how long) Manual central controls for maintenance, e.g. window cleaning, blinds maintenance etc. I have no issue with the second and third rule, but I dislike it when the blinds are closed for sunlight reasons. My main problem is that I go to work early in the morning and the building closes the blinds by 8am. This means that my plants are now in relative darkness until I get home at which point it might already by dark outside again. But even when I'm home it's a bit annoying to have to get up and open the blinds again when the building decides it's time to lower them. So here's my setup for controlling these blinds via Home Assistant: Communication \u00b6 I use a KNX IP Interface 731 connected to the controller via KNX TP (twisted pair). The KNX IP interface has an ethernet socket and is plugged into my LAN. I've assigned it a fixed IPv4 IP. ETS5 Professional \u00b6 Via the KNX IP Interface and a software called ETS5 Professional it's possible to overwrite the configuration on the KNX controller. ETS5 can be downloaded for free as a demo version with full functionality for up to 5 projects. Since ETS5 is only released for Windows I've been using it on a Parallels VM. Warning Beware, the existing configuration cannot be downloaded and changed. It's only possible to write an entirely new configuration onto the controller. The only way to keep the existing configuration is if you can get a hold of the configuration file from whoever set up the controller in the first place. If you're renting it can be a bit of a hassle to get the original configuration from a technician. KNX Configuration \u00b6 So in order to control the blinds via Home Assistant what we need to do is assign group addresses. Over these address the blinds can then be controlled. Group Addresses \u00b6 It's a good idea to invent some sort of system when assigning addresses so that it will be easier to remember which address does what when configuring them in Home Assistant. Info A KNX group address has a data length of 16bit and consists of 3 parts: main/middle/sub I've decided on the following scheme for my blinds: prefix/blind/function Function addresses \u00b6 Function Value Length Data Type Address Read Position 0-255 1 byte percentage (0-100%) 233 Step Step/Stop 1 bit switch 232 Set Position 0-255 1 byte percentage (0-100%) 231 Up/Down Up/Down 1 bit up/down 230 Address list \u00b6 Function Blind Address Read Position Loggia 22/1/233 Read Position Living Room 22/2/233 Step Loggia 22/1/232 Step Living Room 22/2/232 Set Position Loggia 22/1/231 Set Position Living Room 22/2/231 Up/Down Loggia 22/1/230 Up/Down Living Room 22/1/230 In order to control multiple blinds at the same time you simply assign them the same address. E.g. for me the loggia and living room blinds consist of each 3 blinds. But since I don't want to control those individually I simply assign the three living room blinds the same address for each function. Home Assistant configuration \u00b6 The setup within Home Assistant is fairly simple. First you have to configure the KNX IP interface as seen below: knx : tunneling : host : '192.168.178.71' # the IP of the KNX interface port : 3671 fire_event : true fire_event_filter : [ \"22/1-2/*\" ] # Only listen to events from my blinds Info Beware that the KNX IP interface may have a limit for how many computers it can be connected to at the same time. Mine only supports one computer, so I needed to disconnect ETS5 before restarting Home Assistant. Then you have to setup the devices that should be controlled. For me these are my two blinds: cover : - platform : knx name : \"Loggia\" move_long_address : '22/1/230' # Up/Down function move_short_address : '22/1/232' # Step function position_address : '22/1/231' # Position function position_state_address : '22/1/233' # Read Position function travelling_time_down : 24 travelling_time_up : 24 - platform : knx name : \"Livingroom\" move_long_address : '22/2/230' # Up/Down function move_short_address : '22/2/232' # Step function position_address : '22/2/231' # Position function position_state_address : '22/2/233' # Read Position function travelling_time_down : 24 travelling_time_up : 24 That's it, after a restart the blinds can be added to your lovelace UI.","title":"KNX"},{"location":"software/knx/#knx-blinds-configuration","text":"The apartment that I'm renting has blinds that can be raised and lowered electronically. They're controlled over a \"Griesser MGX-9 Motorsteuerung\" (actor controller). The controller communicates with the buildings central control unit over KNX . KNX is an open standard for building automation. Some of the rules that cause the building to control the blinds are: Direct sunlight on the side of the building at specific times (e.g. 8am, 9am) cause it to lower the blinds Strong winds cause it to raise the blinds and lock them for some time (idk how long) Manual central controls for maintenance, e.g. window cleaning, blinds maintenance etc. I have no issue with the second and third rule, but I dislike it when the blinds are closed for sunlight reasons. My main problem is that I go to work early in the morning and the building closes the blinds by 8am. This means that my plants are now in relative darkness until I get home at which point it might already by dark outside again. But even when I'm home it's a bit annoying to have to get up and open the blinds again when the building decides it's time to lower them. So here's my setup for controlling these blinds via Home Assistant:","title":"KNX Blinds Configuration"},{"location":"software/knx/#communication","text":"I use a KNX IP Interface 731 connected to the controller via KNX TP (twisted pair). The KNX IP interface has an ethernet socket and is plugged into my LAN. I've assigned it a fixed IPv4 IP.","title":"Communication"},{"location":"software/knx/#ets5-professional","text":"Via the KNX IP Interface and a software called ETS5 Professional it's possible to overwrite the configuration on the KNX controller. ETS5 can be downloaded for free as a demo version with full functionality for up to 5 projects. Since ETS5 is only released for Windows I've been using it on a Parallels VM. Warning Beware, the existing configuration cannot be downloaded and changed. It's only possible to write an entirely new configuration onto the controller. The only way to keep the existing configuration is if you can get a hold of the configuration file from whoever set up the controller in the first place. If you're renting it can be a bit of a hassle to get the original configuration from a technician.","title":"ETS5 Professional"},{"location":"software/knx/#knx-configuration","text":"So in order to control the blinds via Home Assistant what we need to do is assign group addresses. Over these address the blinds can then be controlled.","title":"KNX Configuration"},{"location":"software/knx/#group-addresses","text":"It's a good idea to invent some sort of system when assigning addresses so that it will be easier to remember which address does what when configuring them in Home Assistant. Info A KNX group address has a data length of 16bit and consists of 3 parts: main/middle/sub I've decided on the following scheme for my blinds: prefix/blind/function","title":"Group Addresses"},{"location":"software/knx/#function-addresses","text":"Function Value Length Data Type Address Read Position 0-255 1 byte percentage (0-100%) 233 Step Step/Stop 1 bit switch 232 Set Position 0-255 1 byte percentage (0-100%) 231 Up/Down Up/Down 1 bit up/down 230","title":"Function addresses"},{"location":"software/knx/#address-list","text":"Function Blind Address Read Position Loggia 22/1/233 Read Position Living Room 22/2/233 Step Loggia 22/1/232 Step Living Room 22/2/232 Set Position Loggia 22/1/231 Set Position Living Room 22/2/231 Up/Down Loggia 22/1/230 Up/Down Living Room 22/1/230 In order to control multiple blinds at the same time you simply assign them the same address. E.g. for me the loggia and living room blinds consist of each 3 blinds. But since I don't want to control those individually I simply assign the three living room blinds the same address for each function.","title":"Address list"},{"location":"software/knx/#home-assistant-configuration","text":"The setup within Home Assistant is fairly simple. First you have to configure the KNX IP interface as seen below: knx : tunneling : host : '192.168.178.71' # the IP of the KNX interface port : 3671 fire_event : true fire_event_filter : [ \"22/1-2/*\" ] # Only listen to events from my blinds Info Beware that the KNX IP interface may have a limit for how many computers it can be connected to at the same time. Mine only supports one computer, so I needed to disconnect ETS5 before restarting Home Assistant. Then you have to setup the devices that should be controlled. For me these are my two blinds: cover : - platform : knx name : \"Loggia\" move_long_address : '22/1/230' # Up/Down function move_short_address : '22/1/232' # Step function position_address : '22/1/231' # Position function position_state_address : '22/1/233' # Read Position function travelling_time_down : 24 travelling_time_up : 24 - platform : knx name : \"Livingroom\" move_long_address : '22/2/230' # Up/Down function move_short_address : '22/2/232' # Step function position_address : '22/2/231' # Position function position_state_address : '22/2/233' # Read Position function travelling_time_down : 24 travelling_time_up : 24 That's it, after a restart the blinds can be added to your lovelace UI.","title":"Home Assistant configuration"},{"location":"software/node-red/","text":"I use a Home Assistant addon called \"Node-RED\" for most of my automations. Node-RED is a low-code programming tool for wiring together hardware devices, APIs and online services. It was originally developed by IBM and is now part of the OpenJS Foundation . It can also be used standalone, e.g. without Home Assistant. But when used as a Home Assistant addon you automatically gain access to all devices, services etc. that are known to Home Assistant. This makes it really easy to wire together useful automations. Node-RED configuration \u00b6 Node-RED is configured in it's UI. The resulting configuration is stored in a \"node-red\" folder . Although it can be checked in it's not really meant to be human-readable or editable outside of Node-RED. Why use Node-RED over the Home Assistant built-in automation features? \u00b6 These days pretty much everything that can be done in Node-RED could also be created as a native Home Assistant automation. However personally I still prefer Node-RED for the following reasons: Easy debugging: with Node-RED you can simply attach a debug node and see exactly where the automations fails. Logs are immediately visible and can be restricted to the automation you're trying to debug. Fast re-deployment: Re-deploying all automations is just a button click away and takes between 2-3seconds. All automations and their components are visible at once and can easily be interconnected and copy&pasted for re-use. The downside of using Node-RED is that the resulting configuration is not really human-readable 1 and the OCD part of me wants to have cleanly formatted files on GitHub ;-). This is not really true. Node-REDs files can be pretty-printed and they're theoretically human-readable XML files. However these are so verbose that there's really no point. \u21a9","title":"Node-RED"},{"location":"software/node-red/#node-red-configuration","text":"Node-RED is configured in it's UI. The resulting configuration is stored in a \"node-red\" folder . Although it can be checked in it's not really meant to be human-readable or editable outside of Node-RED.","title":"Node-RED configuration"},{"location":"software/node-red/#why-use-node-red-over-the-home-assistant-built-in-automation-features","text":"These days pretty much everything that can be done in Node-RED could also be created as a native Home Assistant automation. However personally I still prefer Node-RED for the following reasons: Easy debugging: with Node-RED you can simply attach a debug node and see exactly where the automations fails. Logs are immediately visible and can be restricted to the automation you're trying to debug. Fast re-deployment: Re-deploying all automations is just a button click away and takes between 2-3seconds. All automations and their components are visible at once and can easily be interconnected and copy&pasted for re-use. The downside of using Node-RED is that the resulting configuration is not really human-readable 1 and the OCD part of me wants to have cleanly formatted files on GitHub ;-). This is not really true. Node-REDs files can be pretty-printed and they're theoretically human-readable XML files. However these are so verbose that there's really no point. \u21a9","title":"Why use Node-RED over the Home Assistant built-in automation features?"},{"location":"software/proxmox/","text":"Proxmox VE is an open-source server virtualization management platform. It allows the deployment and management of virtual machines & containers. Proxmox is straight forward to install. And once installed it can be entirely configured over a web interface. You can see an example of my installation running below. My Proxmox VE installation is running on a Intel NUC with 16GB Ram and an i3 dual core cpu . So far performance has been great and I've not noticed any degradation versus running Home Assistant on bare metal. Migration \u00b6 Full Backup: I previously had Home Assistant installed in supervised mode on a Ubuntu server OS. In order to migrate safely and have a surefire fallback solution I've purchased a new SSD to install Proxmox on. That way I could have easily reverted back to my old installation in case there would have been an issue with Proxmox. Alternatively I'd recommend making a full backup of your current installation before proceeding. Create a snapshot: Next you'll want to create a snapshot of your home assistant instance. The snapshot is used to restore Home Assistant after it's been reinstalled inside of Proxmox. Beware that you should shutdown all addons before starting the snapshot creation. This is because sometimes creating a snapshot fails for the addon content if it's running. This actually happened to me and the snapshot didn't include the mariaDB addon. Now download the snapshot to your computer. Free up static IP: I wanted Home Assistant to continue to be accessible under the same static ip address as before the Proxmox migration. This is especially necessary if you have devices, e.g. MQTT clients that are configured to reach HA under a specific IP address. Since Proxmox will use the IP address given to the computer it's running on we need to make sure that this address is different from the one we want to give the Home Assistant VM. Proxmox will generate a new MAC address for each of the VMs it is running. So I've logged into my routers static ip configuration page and assigned a new static ip to the computer that will run Proxmox. Now the original Home Assistant IP is free to be assigned to the virtual machine once we've installed everything. Installation \u00b6 To install Proxmox I've followed this really good tutorial by JuanMTech who's done pretty much the exact migration I wanted to do. I'm not going to write down all the steps from the tutorial in detail, just a rough outline and a few gotchas that weren't mentioned in the video. Download the Proxmox VE iso image Flash the image to a usb drive with balenaEtcher Perform the migration steps mentioned above if you haven't already. Install Proxmox Use a static IP that's different from the one you want to use for Home Assistant I've used \"proxmox.local\" as FQDN After the installation is complete Proxmox is accessible under https://YOUR-PROXMOX-IP:8006 Update Proxmox packages Create a new VM Download the Home Assistant OS QCOW2 Upload the image to your Proxmox instance with a ftp client, e.g. FileZilla Host: your-proxmox-ip, Username: root, Password: your-password, Port: 22 Open the Shell of your Proxmox server and import the image /root/hassos_VERSION.qcow2 local-lvm --format qcow2 Assign imported disk to your Home Assistant VM Resize the disk This is not mentioned in the video but I had to add the disk to the boot order. This is done under Hardware > Boot Order. I've disabled everything except for the imported disk (scsi0). Boot the VM, lookup it's MAC address and assign the desired static IP for Home Assistant in your router, then reboot the VM. If you have usb devices that should be exposed to Home Assistant, e.g. a deCONZ ZigBee stick, add them (Hardware > Add USB Device) Access Home Assistant and upload your snapshot to restore your configuration, data & addons If you have network issues, e.g. accessing Nabu Casa Cloud doesn't work, this is likely due to a misconfigured IPv6 stack. Nabu Casa recommends just turning off IPv6 , which can be done by logging into Home Assistant via the shell and running nmcli con modify \"HassOS default\" ipv6.method disabled , then reboot. Troubleshooting \u00b6 The VM doesn't boot Home Assistant See step 13. You likely need to set the correct boot order. So that the VM boots from the created disk. Can't access Home Assistant after restoring the snapshot Are you using a SSL certificate? That was restored too, so now you need to access HA over https:// again. If you're using the DuckDns addon you should try accessing HA over that address now. If you're accessing HA from outside the LAN or over a domain name, make sure that the port-forwarding in your router is configured correctly. Unable to reach Home Assistant Cloud See step 15 and look at https://www.nabucasa.com/config/troubleshooting/ . None of my devices are available When HA has errors during startup it retries several times.. this makes the startup very slow and it takes a long time even for working devices and integrations to be started. Your best bet is to disable the stuff that doesn't work and fix them bit by bit. Be also sure the check if your main database is available. It may be that your snapshot didn't backup mariaDB or similar and now HA doesn't have a way to store states. Re-installing the required addon or switching back to file storage will help in this case. What else can I run on Proxmox \u00b6 Here's a few ideas. I might expand on them at some point the future. a PLEX mediaserver containing your favorite TV shows and films a minecraft server for your kids (or yourself :P) your own build server (e.g. Jenkins) if you're a developer a VM of an OS that you sometimes need but aren't running on your main machine","title":"Proxmox"},{"location":"software/proxmox/#migration","text":"Full Backup: I previously had Home Assistant installed in supervised mode on a Ubuntu server OS. In order to migrate safely and have a surefire fallback solution I've purchased a new SSD to install Proxmox on. That way I could have easily reverted back to my old installation in case there would have been an issue with Proxmox. Alternatively I'd recommend making a full backup of your current installation before proceeding. Create a snapshot: Next you'll want to create a snapshot of your home assistant instance. The snapshot is used to restore Home Assistant after it's been reinstalled inside of Proxmox. Beware that you should shutdown all addons before starting the snapshot creation. This is because sometimes creating a snapshot fails for the addon content if it's running. This actually happened to me and the snapshot didn't include the mariaDB addon. Now download the snapshot to your computer. Free up static IP: I wanted Home Assistant to continue to be accessible under the same static ip address as before the Proxmox migration. This is especially necessary if you have devices, e.g. MQTT clients that are configured to reach HA under a specific IP address. Since Proxmox will use the IP address given to the computer it's running on we need to make sure that this address is different from the one we want to give the Home Assistant VM. Proxmox will generate a new MAC address for each of the VMs it is running. So I've logged into my routers static ip configuration page and assigned a new static ip to the computer that will run Proxmox. Now the original Home Assistant IP is free to be assigned to the virtual machine once we've installed everything.","title":"Migration"},{"location":"software/proxmox/#installation","text":"To install Proxmox I've followed this really good tutorial by JuanMTech who's done pretty much the exact migration I wanted to do. I'm not going to write down all the steps from the tutorial in detail, just a rough outline and a few gotchas that weren't mentioned in the video. Download the Proxmox VE iso image Flash the image to a usb drive with balenaEtcher Perform the migration steps mentioned above if you haven't already. Install Proxmox Use a static IP that's different from the one you want to use for Home Assistant I've used \"proxmox.local\" as FQDN After the installation is complete Proxmox is accessible under https://YOUR-PROXMOX-IP:8006 Update Proxmox packages Create a new VM Download the Home Assistant OS QCOW2 Upload the image to your Proxmox instance with a ftp client, e.g. FileZilla Host: your-proxmox-ip, Username: root, Password: your-password, Port: 22 Open the Shell of your Proxmox server and import the image /root/hassos_VERSION.qcow2 local-lvm --format qcow2 Assign imported disk to your Home Assistant VM Resize the disk This is not mentioned in the video but I had to add the disk to the boot order. This is done under Hardware > Boot Order. I've disabled everything except for the imported disk (scsi0). Boot the VM, lookup it's MAC address and assign the desired static IP for Home Assistant in your router, then reboot the VM. If you have usb devices that should be exposed to Home Assistant, e.g. a deCONZ ZigBee stick, add them (Hardware > Add USB Device) Access Home Assistant and upload your snapshot to restore your configuration, data & addons If you have network issues, e.g. accessing Nabu Casa Cloud doesn't work, this is likely due to a misconfigured IPv6 stack. Nabu Casa recommends just turning off IPv6 , which can be done by logging into Home Assistant via the shell and running nmcli con modify \"HassOS default\" ipv6.method disabled , then reboot.","title":"Installation"},{"location":"software/proxmox/#troubleshooting","text":"The VM doesn't boot Home Assistant See step 13. You likely need to set the correct boot order. So that the VM boots from the created disk. Can't access Home Assistant after restoring the snapshot Are you using a SSL certificate? That was restored too, so now you need to access HA over https:// again. If you're using the DuckDns addon you should try accessing HA over that address now. If you're accessing HA from outside the LAN or over a domain name, make sure that the port-forwarding in your router is configured correctly. Unable to reach Home Assistant Cloud See step 15 and look at https://www.nabucasa.com/config/troubleshooting/ . None of my devices are available When HA has errors during startup it retries several times.. this makes the startup very slow and it takes a long time even for working devices and integrations to be started. Your best bet is to disable the stuff that doesn't work and fix them bit by bit. Be also sure the check if your main database is available. It may be that your snapshot didn't backup mariaDB or similar and now HA doesn't have a way to store states. Re-installing the required addon or switching back to file storage will help in this case.","title":"Troubleshooting"},{"location":"software/proxmox/#what-else-can-i-run-on-proxmox","text":"Here's a few ideas. I might expand on them at some point the future. a PLEX mediaserver containing your favorite TV shows and films a minecraft server for your kids (or yourself :P) your own build server (e.g. Jenkins) if you're a developer a VM of an OS that you sometimes need but aren't running on your main machine","title":"What else can I run on Proxmox"}]}